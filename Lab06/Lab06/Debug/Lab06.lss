
Lab06.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000076  00800100  00000e04  00000e98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e04  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005c  00800176  00800176  00000f0e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f0e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000f80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d3d  00000000  00000000  00001060  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000815  00000000  00000000  00001d9d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009ec  00000000  00000000  000025b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000368  00000000  00000000  00002fa0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000550  00000000  00000000  00003308  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000071f  00000000  00000000  00003858  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00003f77  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__ctors_end>
   4:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
   8:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
   c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  10:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  14:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  18:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  1c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  20:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  24:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  28:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  2c:	0c 94 5e 01 	jmp	0x2bc	; 0x2bc <__vector_11>
  30:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  34:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  38:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  3c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  40:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  44:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  48:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <__vector_18>
  4c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  50:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  54:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  58:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  5c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  60:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  64:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  68:	dc 01       	movw	r26, r24
  6a:	01 02       	muls	r16, r17
  6c:	01 02       	muls	r16, r17
  6e:	01 02       	muls	r16, r17
  70:	01 02       	muls	r16, r17
  72:	ce 01       	movw	r24, r28
  74:	ee 01       	movw	r28, r28
  76:	c1 01       	movw	r24, r2
  78:	01 02       	muls	r16, r17
  7a:	01 02       	muls	r16, r17
  7c:	01 02       	muls	r16, r17
  7e:	01 02       	muls	r16, r17
  80:	01 02       	muls	r16, r17
  82:	01 02       	muls	r16, r17
  84:	01 02       	muls	r16, r17
  86:	01 02       	muls	r16, r17
  88:	01 02       	muls	r16, r17
  8a:	01 02       	muls	r16, r17
  8c:	01 02       	muls	r16, r17
  8e:	01 02       	muls	r16, r17
  90:	01 02       	muls	r16, r17
  92:	01 02       	muls	r16, r17
  94:	01 02       	muls	r16, r17
  96:	01 02       	muls	r16, r17
  98:	01 02       	muls	r16, r17
  9a:	01 02       	muls	r16, r17
  9c:	01 02       	muls	r16, r17
  9e:	01 02       	muls	r16, r17
  a0:	01 02       	muls	r16, r17
  a2:	01 02       	muls	r16, r17
  a4:	01 02       	muls	r16, r17
  a6:	01 02       	muls	r16, r17
  a8:	dc 01       	movw	r26, r24
  aa:	01 02       	muls	r16, r17
  ac:	01 02       	muls	r16, r17
  ae:	01 02       	muls	r16, r17
  b0:	01 02       	muls	r16, r17
  b2:	ce 01       	movw	r24, r28
  b4:	ee 01       	movw	r28, r28
  b6:	c1 01       	movw	r24, r2

000000b8 <__trampolines_end>:
  b8:	2a 2a       	or	r2, r26
  ba:	2a 2a       	or	r2, r26
  bc:	2a 2a       	or	r2, r26
  be:	2a 2a       	or	r2, r26
  c0:	2a 2a       	or	r2, r26
  c2:	2a 2a       	or	r2, r26
  c4:	2a 2a       	or	r2, r26
  c6:	2a 2a       	or	r2, r26
  c8:	2a 2a       	or	r2, r26
  ca:	2a 2a       	or	r2, r26
  cc:	2a 2a       	or	r2, r26
  ce:	2a 2a       	or	r2, r26
  d0:	2a 2a       	or	r2, r26
  d2:	2a 2a       	or	r2, r26
  d4:	2a 2a       	or	r2, r26
  d6:	2a 2a       	or	r2, r26
  d8:	2a 2a       	or	r2, r26
  da:	2a 2a       	or	r2, r26
  dc:	2a 0d       	add	r18, r10
  de:	0a 50       	subi	r16, 0x0A	; 10
  e0:	72 65       	ori	r23, 0x52	; 82
  e2:	73 73       	andi	r23, 0x33	; 51
  e4:	20 61       	ori	r18, 0x10	; 16
  e6:	6e 79       	andi	r22, 0x9E	; 158
  e8:	20 6f       	ori	r18, 0xF0	; 240
  ea:	66 20       	and	r6, r6
  ec:	74 68       	ori	r23, 0x84	; 132
  ee:	65 73       	andi	r22, 0x35	; 53
  f0:	65 20       	and	r6, r5
  f2:	6b 65       	ori	r22, 0x5B	; 91
  f4:	79 73       	andi	r23, 0x39	; 57
  f6:	3b 0d       	add	r19, r11
  f8:	0a 20       	and	r0, r10
  fa:	20 20       	and	r2, r0
  fc:	54 20       	and	r5, r4
  fe:	2d 20       	and	r2, r13
 100:	47 65       	ori	r20, 0x57	; 87
 102:	74 20       	and	r7, r4
 104:	74 69       	ori	r23, 0x94	; 148
 106:	6d 65       	ori	r22, 0x5D	; 93
 108:	20 66       	ori	r18, 0x60	; 96
 10a:	72 6f       	ori	r23, 0xF2	; 242
 10c:	6d 20       	and	r6, r13
 10e:	50 43       	sbci	r21, 0x30	; 48
 110:	20 61       	ori	r18, 0x10	; 16
 112:	6e 64       	ori	r22, 0x4E	; 78
 114:	20 73       	andi	r18, 0x30	; 48
 116:	65 74       	andi	r22, 0x45	; 69
 118:	20 52       	subi	r18, 0x20	; 32
 11a:	54 43       	sbci	r21, 0x34	; 52
 11c:	2e 0d       	add	r18, r14
 11e:	0a 20       	and	r0, r10
 120:	20 20       	and	r2, r0
 122:	52 20       	and	r5, r2
 124:	2d 20       	and	r2, r13
 126:	52 75       	andi	r21, 0x52	; 82
 128:	6e 20       	and	r6, r14
 12a:	61 6e       	ori	r22, 0xE1	; 225
 12c:	64 20       	and	r6, r4
 12e:	63 6f       	ori	r22, 0xF3	; 243
 130:	6c 6c       	ori	r22, 0xCC	; 204
 132:	65 63       	ori	r22, 0x35	; 53
 134:	74 20       	and	r7, r4
 136:	64 61       	ori	r22, 0x14	; 20
 138:	74 61       	ori	r23, 0x14	; 20
 13a:	2e 0d       	add	r18, r14
 13c:	0a 20       	and	r0, r10
 13e:	20 20       	and	r2, r0
 140:	53 20       	and	r5, r3
 142:	2d 20       	and	r2, r13
 144:	50 72       	andi	r21, 0x20	; 32
 146:	69 6e       	ori	r22, 0xE9	; 233
 148:	74 20       	and	r7, r4
 14a:	63 75       	andi	r22, 0x53	; 83
 14c:	72 72       	andi	r23, 0x22	; 34
 14e:	65 6e       	ori	r22, 0xE5	; 229
 150:	74 20       	and	r7, r4
 152:	74 69       	ori	r23, 0x94	; 148
 154:	6d 65       	ori	r22, 0x5D	; 93
 156:	20 6f       	ori	r18, 0xF0	; 240
 158:	6e 20       	and	r6, r14
 15a:	74 68       	ori	r23, 0x84	; 132
 15c:	65 20       	and	r6, r5
 15e:	52 54       	subi	r21, 0x42	; 66
 160:	43 2e       	mov	r4, r19
 162:	0d 0a       	sbc	r0, r29
 164:	2a 2a       	or	r2, r26
 166:	2a 2a       	or	r2, r26
 168:	2a 2a       	or	r2, r26
 16a:	2a 2a       	or	r2, r26
 16c:	2a 2a       	or	r2, r26
 16e:	2a 2a       	or	r2, r26
 170:	2a 2a       	or	r2, r26
 172:	2a 2a       	or	r2, r26
 174:	2a 2a       	or	r2, r26
 176:	2a 2a       	or	r2, r26
 178:	2a 2a       	or	r2, r26
 17a:	2a 2a       	or	r2, r26
 17c:	2a 2a       	or	r2, r26
 17e:	2a 2a       	or	r2, r26
 180:	2a 2a       	or	r2, r26
 182:	2a 2a       	or	r2, r26
 184:	2a 2a       	or	r2, r26
 186:	2a 2a       	or	r2, r26
 188:	2a 0d       	add	r18, r10
 18a:	0a 00       	.word	0x000a	; ????

0000018c <__ctors_end>:
 18c:	11 24       	eor	r1, r1
 18e:	1f be       	out	0x3f, r1	; 63
 190:	cf ef       	ldi	r28, 0xFF	; 255
 192:	d8 e0       	ldi	r29, 0x08	; 8
 194:	de bf       	out	0x3e, r29	; 62
 196:	cd bf       	out	0x3d, r28	; 61

00000198 <__do_copy_data>:
 198:	11 e0       	ldi	r17, 0x01	; 1
 19a:	a0 e0       	ldi	r26, 0x00	; 0
 19c:	b1 e0       	ldi	r27, 0x01	; 1
 19e:	e4 e0       	ldi	r30, 0x04	; 4
 1a0:	fe e0       	ldi	r31, 0x0E	; 14
 1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <__do_copy_data+0x10>
 1a4:	05 90       	lpm	r0, Z+
 1a6:	0d 92       	st	X+, r0
 1a8:	a6 37       	cpi	r26, 0x76	; 118
 1aa:	b1 07       	cpc	r27, r17
 1ac:	d9 f7       	brne	.-10     	; 0x1a4 <__do_copy_data+0xc>

000001ae <__do_clear_bss>:
 1ae:	21 e0       	ldi	r18, 0x01	; 1
 1b0:	a6 e7       	ldi	r26, 0x76	; 118
 1b2:	b1 e0       	ldi	r27, 0x01	; 1
 1b4:	01 c0       	rjmp	.+2      	; 0x1b8 <.do_clear_bss_start>

000001b6 <.do_clear_bss_loop>:
 1b6:	1d 92       	st	X+, r1

000001b8 <.do_clear_bss_start>:
 1b8:	a2 3d       	cpi	r26, 0xD2	; 210
 1ba:	b2 07       	cpc	r27, r18
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <.do_clear_bss_loop>
 1be:	0e 94 71 01 	call	0x2e2	; 0x2e2 <main>
 1c2:	0c 94 00 07 	jmp	0xe00	; 0xe00 <_exit>

000001c6 <__bad_interrupt>:
 1c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ca <isotime>:
 1ca:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ce:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1d2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <isotime_r>
 1d6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1da:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1de:	08 95       	ret

000001e0 <isotime_r>:
 1e0:	ef 92       	push	r14
 1e2:	ff 92       	push	r15
 1e4:	0f 93       	push	r16
 1e6:	1f 93       	push	r17
 1e8:	cf 93       	push	r28
 1ea:	df 93       	push	r29
 1ec:	8c 01       	movw	r16, r24
 1ee:	eb 01       	movw	r28, r22
 1f0:	fc 01       	movw	r30, r24
 1f2:	86 81       	ldd	r24, Z+6	; 0x06
 1f4:	97 81       	ldd	r25, Z+7	; 0x07
 1f6:	84 59       	subi	r24, 0x94	; 148
 1f8:	98 4f       	sbci	r25, 0xF8	; 248
 1fa:	64 e6       	ldi	r22, 0x64	; 100
 1fc:	70 e0       	ldi	r23, 0x00	; 0
 1fe:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__divmodhi4>
 202:	9b 01       	movw	r18, r22
 204:	7c 01       	movw	r14, r24
 206:	4d e2       	ldi	r20, 0x2D	; 45
 208:	be 01       	movw	r22, r28
 20a:	c9 01       	movw	r24, r18
 20c:	0e 94 4c 01 	call	0x298	; 0x298 <__print_lz>
 210:	be 01       	movw	r22, r28
 212:	6e 5f       	subi	r22, 0xFE	; 254
 214:	7f 4f       	sbci	r23, 0xFF	; 255
 216:	4d e2       	ldi	r20, 0x2D	; 45
 218:	c7 01       	movw	r24, r14
 21a:	0e 94 4c 01 	call	0x298	; 0x298 <__print_lz>
 21e:	be 01       	movw	r22, r28
 220:	6b 5f       	subi	r22, 0xFB	; 251
 222:	7f 4f       	sbci	r23, 0xFF	; 255
 224:	f8 01       	movw	r30, r16
 226:	85 81       	ldd	r24, Z+5	; 0x05
 228:	08 2e       	mov	r0, r24
 22a:	00 0c       	add	r0, r0
 22c:	99 0b       	sbc	r25, r25
 22e:	4d e2       	ldi	r20, 0x2D	; 45
 230:	01 96       	adiw	r24, 0x01	; 1
 232:	0e 94 4c 01 	call	0x298	; 0x298 <__print_lz>
 236:	be 01       	movw	r22, r28
 238:	68 5f       	subi	r22, 0xF8	; 248
 23a:	7f 4f       	sbci	r23, 0xFF	; 255
 23c:	f8 01       	movw	r30, r16
 23e:	83 81       	ldd	r24, Z+3	; 0x03
 240:	40 e2       	ldi	r20, 0x20	; 32
 242:	08 2e       	mov	r0, r24
 244:	00 0c       	add	r0, r0
 246:	99 0b       	sbc	r25, r25
 248:	0e 94 4c 01 	call	0x298	; 0x298 <__print_lz>
 24c:	be 01       	movw	r22, r28
 24e:	65 5f       	subi	r22, 0xF5	; 245
 250:	7f 4f       	sbci	r23, 0xFF	; 255
 252:	f8 01       	movw	r30, r16
 254:	82 81       	ldd	r24, Z+2	; 0x02
 256:	4a e3       	ldi	r20, 0x3A	; 58
 258:	08 2e       	mov	r0, r24
 25a:	00 0c       	add	r0, r0
 25c:	99 0b       	sbc	r25, r25
 25e:	0e 94 4c 01 	call	0x298	; 0x298 <__print_lz>
 262:	be 01       	movw	r22, r28
 264:	62 5f       	subi	r22, 0xF2	; 242
 266:	7f 4f       	sbci	r23, 0xFF	; 255
 268:	f8 01       	movw	r30, r16
 26a:	81 81       	ldd	r24, Z+1	; 0x01
 26c:	4a e3       	ldi	r20, 0x3A	; 58
 26e:	08 2e       	mov	r0, r24
 270:	00 0c       	add	r0, r0
 272:	99 0b       	sbc	r25, r25
 274:	0e 94 4c 01 	call	0x298	; 0x298 <__print_lz>
 278:	be 01       	movw	r22, r28
 27a:	6f 5e       	subi	r22, 0xEF	; 239
 27c:	7f 4f       	sbci	r23, 0xFF	; 255
 27e:	f8 01       	movw	r30, r16
 280:	80 81       	ld	r24, Z
 282:	40 e0       	ldi	r20, 0x00	; 0
 284:	08 2e       	mov	r0, r24
 286:	00 0c       	add	r0, r0
 288:	99 0b       	sbc	r25, r25
 28a:	0e 94 4c 01 	call	0x298	; 0x298 <__print_lz>
 28e:	cd b7       	in	r28, 0x3d	; 61
 290:	de b7       	in	r29, 0x3e	; 62
 292:	e6 e0       	ldi	r30, 0x06	; 6
 294:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__epilogue_restores__+0x18>

00000298 <__print_lz>:
 298:	1f 93       	push	r17
 29a:	cf 93       	push	r28
 29c:	df 93       	push	r29
 29e:	eb 01       	movw	r28, r22
 2a0:	14 2f       	mov	r17, r20
 2a2:	6a e0       	ldi	r22, 0x0A	; 10
 2a4:	70 e0       	ldi	r23, 0x00	; 0
 2a6:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__divmodhi4>
 2aa:	60 5d       	subi	r22, 0xD0	; 208
 2ac:	68 83       	st	Y, r22
 2ae:	80 5d       	subi	r24, 0xD0	; 208
 2b0:	89 83       	std	Y+1, r24	; 0x01
 2b2:	1a 83       	std	Y+2, r17	; 0x02
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	1f 91       	pop	r17
 2ba:	08 95       	ret

000002bc <__vector_11>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
 2bc:	1f 92       	push	r1
 2be:	0f 92       	push	r0
 2c0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 2c4:	0f 92       	push	r0
 2c6:	11 24       	eor	r1, r1
 2c8:	cf 93       	push	r28
 2ca:	df 93       	push	r29
 2cc:	cd b7       	in	r28, 0x3d	; 61
 2ce:	de b7       	in	r29, 0x3e	; 62
 2d0:	00 00       	nop
 2d2:	df 91       	pop	r29
 2d4:	cf 91       	pop	r28
 2d6:	0f 90       	pop	r0
 2d8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 2dc:	0f 90       	pop	r0
 2de:	1f 90       	pop	r1
 2e0:	18 95       	reti

000002e2 <main>:
 2e2:	cf 93       	push	r28
 2e4:	df 93       	push	r29
 2e6:	cd b7       	in	r28, 0x3d	; 61
 2e8:	de b7       	in	r29, 0x3e	; 62
 2ea:	2f 97       	sbiw	r28, 0x0f	; 15
 2ec:	0f b6       	in	r0, 0x3f	; 63
 2ee:	f8 94       	cli
 2f0:	de bf       	out	0x3e, r29	; 62
 2f2:	0f be       	out	0x3f, r0	; 63
 2f4:	cd bf       	out	0x3d, r28	; 61
 2f6:	8c e7       	ldi	r24, 0x7C	; 124
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	20 e4       	ldi	r18, 0x40	; 64
 2fc:	fc 01       	movw	r30, r24
 2fe:	20 83       	st	Z, r18
 300:	8b e7       	ldi	r24, 0x7B	; 123
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	fc 01       	movw	r30, r24
 306:	10 82       	st	Z, r1
 308:	8a e7       	ldi	r24, 0x7A	; 122
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	20 ec       	ldi	r18, 0xC0	; 192
 30e:	fc 01       	movw	r30, r24
 310:	20 83       	st	Z, r18
 312:	80 e8       	ldi	r24, 0x80	; 128
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	fc 01       	movw	r30, r24
 318:	10 82       	st	Z, r1
 31a:	88 e8       	ldi	r24, 0x88	; 136
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	24 e2       	ldi	r18, 0x24	; 36
 320:	34 ef       	ldi	r19, 0xF4	; 244
 322:	fc 01       	movw	r30, r24
 324:	31 83       	std	Z+1, r19	; 0x01
 326:	20 83       	st	Z, r18
 328:	81 e8       	ldi	r24, 0x81	; 129
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	21 e8       	ldi	r18, 0x81	; 129
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	f9 01       	movw	r30, r18
 332:	20 81       	ld	r18, Z
 334:	2c 60       	ori	r18, 0x0C	; 12
 336:	fc 01       	movw	r30, r24
 338:	20 83       	st	Z, r18
 33a:	0e 94 44 04 	call	0x888	; 0x888 <usart_init>
 33e:	0e 94 2e 05 	call	0xa5c	; 0xa5c <i2c_init>
 342:	78 94       	sei
 344:	0e 94 08 02 	call	0x410	; 0x410 <showMenu>
 348:	0e 94 1f 05 	call	0xa3e	; 0xa3e <uart_buffer_empty>
 34c:	88 23       	and	r24, r24
 34e:	e1 f7       	brne	.-8      	; 0x348 <main+0x66>
 350:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 354:	89 83       	std	Y+1, r24	; 0x01
 356:	89 81       	ldd	r24, Y+1	; 0x01
 358:	88 2f       	mov	r24, r24
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	09 2e       	mov	r0, r25
 35e:	00 0c       	add	r0, r0
 360:	aa 0b       	sbc	r26, r26
 362:	bb 0b       	sbc	r27, r27
 364:	4d e4       	ldi	r20, 0x4D	; 77
 366:	50 e0       	ldi	r21, 0x00	; 0
 368:	27 e2       	ldi	r18, 0x27	; 39
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	84 1b       	sub	r24, r20
 36e:	95 0b       	sbc	r25, r21
 370:	28 17       	cp	r18, r24
 372:	39 07       	cpc	r19, r25
 374:	08 f4       	brcc	.+2      	; 0x378 <main+0x96>
 376:	45 c0       	rjmp	.+138    	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 378:	8c 5c       	subi	r24, 0xCC	; 204
 37a:	9f 4f       	sbci	r25, 0xFF	; 255
 37c:	fc 01       	movw	r30, r24
 37e:	0c 94 91 06 	jmp	0xd22	; 0xd22 <__tablejump2__>
 382:	82 e0       	ldi	r24, 0x02	; 2
 384:	91 e0       	ldi	r25, 0x01	; 1
 386:	0e 94 cd 04 	call	0x99a	; 0x99a <usart_prints>
 38a:	ce 01       	movw	r24, r28
 38c:	04 96       	adiw	r24, 0x04	; 4
 38e:	0e 94 14 02 	call	0x428	; 0x428 <getPCTime>
 392:	ce 01       	movw	r24, r28
 394:	04 96       	adiw	r24, 0x04	; 4
 396:	0e 94 43 03 	call	0x686	; 0x686 <setPCF8583Time>
 39a:	39 c0       	rjmp	.+114    	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 39c:	8a e2       	ldi	r24, 0x2A	; 42
 39e:	91 e0       	ldi	r25, 0x01	; 1
 3a0:	0e 94 cd 04 	call	0x99a	; 0x99a <usart_prints>
 3a4:	8f e6       	ldi	r24, 0x6F	; 111
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	2f e6       	ldi	r18, 0x6F	; 111
 3aa:	30 e0       	ldi	r19, 0x00	; 0
 3ac:	f9 01       	movw	r30, r18
 3ae:	20 81       	ld	r18, Z
 3b0:	22 60       	ori	r18, 0x02	; 2
 3b2:	fc 01       	movw	r30, r24
 3b4:	20 83       	st	Z, r18
 3b6:	2b c0       	rjmp	.+86     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 3b8:	8f e6       	ldi	r24, 0x6F	; 111
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	fc 01       	movw	r30, r24
 3be:	80 81       	ld	r24, Z
 3c0:	8f e6       	ldi	r24, 0x6F	; 111
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	2f e6       	ldi	r18, 0x6F	; 111
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	f9 01       	movw	r30, r18
 3ca:	20 81       	ld	r18, Z
 3cc:	2d 7f       	andi	r18, 0xFD	; 253
 3ce:	fc 01       	movw	r30, r24
 3d0:	20 83       	st	Z, r18
 3d2:	8c e3       	ldi	r24, 0x3C	; 60
 3d4:	91 e0       	ldi	r25, 0x01	; 1
 3d6:	0e 94 cd 04 	call	0x99a	; 0x99a <usart_prints>
 3da:	19 c0       	rjmp	.+50     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 3dc:	ce 01       	movw	r24, r28
 3de:	04 96       	adiw	r24, 0x04	; 4
 3e0:	0e 94 b7 03 	call	0x76e	; 0x76e <getPCF8583Time>
 3e4:	ce 01       	movw	r24, r28
 3e6:	04 96       	adiw	r24, 0x04	; 4
 3e8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <isotime>
 3ec:	9b 83       	std	Y+3, r25	; 0x03
 3ee:	8a 83       	std	Y+2, r24	; 0x02
 3f0:	8a 81       	ldd	r24, Y+2	; 0x02
 3f2:	9b 81       	ldd	r25, Y+3	; 0x03
 3f4:	0e 94 cd 04 	call	0x99a	; 0x99a <usart_prints>
 3f8:	8a e4       	ldi	r24, 0x4A	; 74
 3fa:	91 e0       	ldi	r25, 0x01	; 1
 3fc:	0e 94 cd 04 	call	0x99a	; 0x99a <usart_prints>
 400:	06 c0       	rjmp	.+12     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 402:	8d e4       	ldi	r24, 0x4D	; 77
 404:	91 e0       	ldi	r25, 0x01	; 1
 406:	0e 94 cd 04 	call	0x99a	; 0x99a <usart_prints>
 40a:	0e 94 38 04 	call	0x870	; 0x870 <usart_clear>
 40e:	9c cf       	rjmp	.-200    	; 0x348 <main+0x66>

00000410 <showMenu>:
 410:	cf 93       	push	r28
 412:	df 93       	push	r29
 414:	cd b7       	in	r28, 0x3d	; 61
 416:	de b7       	in	r29, 0x3e	; 62
 418:	88 eb       	ldi	r24, 0xB8	; 184
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <usart_printf>
 420:	00 00       	nop
 422:	df 91       	pop	r29
 424:	cf 91       	pop	r28
 426:	08 95       	ret

00000428 <getPCTime>:
 428:	cf 93       	push	r28
 42a:	df 93       	push	r29
 42c:	cd b7       	in	r28, 0x3d	; 61
 42e:	de b7       	in	r29, 0x3e	; 62
 430:	a2 97       	sbiw	r28, 0x22	; 34
 432:	0f b6       	in	r0, 0x3f	; 63
 434:	f8 94       	cli
 436:	de bf       	out	0x3e, r29	; 62
 438:	0f be       	out	0x3f, r0	; 63
 43a:	cd bf       	out	0x3d, r28	; 61
 43c:	9a a3       	std	Y+34, r25	; 0x22
 43e:	89 a3       	std	Y+33, r24	; 0x21
 440:	1a 82       	std	Y+2, r1	; 0x02
 442:	19 82       	std	Y+1, r1	; 0x01
 444:	1c c0       	rjmp	.+56     	; 0x47e <getPCTime+0x56>
 446:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 44a:	48 2f       	mov	r20, r24
 44c:	9e 01       	movw	r18, r28
 44e:	23 5f       	subi	r18, 0xF3	; 243
 450:	3f 4f       	sbci	r19, 0xFF	; 255
 452:	89 81       	ldd	r24, Y+1	; 0x01
 454:	9a 81       	ldd	r25, Y+2	; 0x02
 456:	82 0f       	add	r24, r18
 458:	93 1f       	adc	r25, r19
 45a:	fc 01       	movw	r30, r24
 45c:	40 83       	st	Z, r20
 45e:	9e 01       	movw	r18, r28
 460:	23 5f       	subi	r18, 0xF3	; 243
 462:	3f 4f       	sbci	r19, 0xFF	; 255
 464:	89 81       	ldd	r24, Y+1	; 0x01
 466:	9a 81       	ldd	r25, Y+2	; 0x02
 468:	82 0f       	add	r24, r18
 46a:	93 1f       	adc	r25, r19
 46c:	fc 01       	movw	r30, r24
 46e:	80 81       	ld	r24, Z
 470:	0e 94 b2 04 	call	0x964	; 0x964 <usart_putc>
 474:	89 81       	ldd	r24, Y+1	; 0x01
 476:	9a 81       	ldd	r25, Y+2	; 0x02
 478:	01 96       	adiw	r24, 0x01	; 1
 47a:	9a 83       	std	Y+2, r25	; 0x02
 47c:	89 83       	std	Y+1, r24	; 0x01
 47e:	89 81       	ldd	r24, Y+1	; 0x01
 480:	9a 81       	ldd	r25, Y+2	; 0x02
 482:	04 97       	sbiw	r24, 0x04	; 4
 484:	04 f3       	brlt	.-64     	; 0x446 <getPCTime+0x1e>
 486:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 48a:	1c 82       	std	Y+4, r1	; 0x04
 48c:	1b 82       	std	Y+3, r1	; 0x03
 48e:	1c c0       	rjmp	.+56     	; 0x4c8 <getPCTime+0xa0>
 490:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 494:	48 2f       	mov	r20, r24
 496:	9e 01       	movw	r18, r28
 498:	2e 5e       	subi	r18, 0xEE	; 238
 49a:	3f 4f       	sbci	r19, 0xFF	; 255
 49c:	8b 81       	ldd	r24, Y+3	; 0x03
 49e:	9c 81       	ldd	r25, Y+4	; 0x04
 4a0:	82 0f       	add	r24, r18
 4a2:	93 1f       	adc	r25, r19
 4a4:	fc 01       	movw	r30, r24
 4a6:	40 83       	st	Z, r20
 4a8:	9e 01       	movw	r18, r28
 4aa:	2e 5e       	subi	r18, 0xEE	; 238
 4ac:	3f 4f       	sbci	r19, 0xFF	; 255
 4ae:	8b 81       	ldd	r24, Y+3	; 0x03
 4b0:	9c 81       	ldd	r25, Y+4	; 0x04
 4b2:	82 0f       	add	r24, r18
 4b4:	93 1f       	adc	r25, r19
 4b6:	fc 01       	movw	r30, r24
 4b8:	80 81       	ld	r24, Z
 4ba:	0e 94 b2 04 	call	0x964	; 0x964 <usart_putc>
 4be:	8b 81       	ldd	r24, Y+3	; 0x03
 4c0:	9c 81       	ldd	r25, Y+4	; 0x04
 4c2:	01 96       	adiw	r24, 0x01	; 1
 4c4:	9c 83       	std	Y+4, r25	; 0x04
 4c6:	8b 83       	std	Y+3, r24	; 0x03
 4c8:	8b 81       	ldd	r24, Y+3	; 0x03
 4ca:	9c 81       	ldd	r25, Y+4	; 0x04
 4cc:	02 97       	sbiw	r24, 0x02	; 2
 4ce:	04 f3       	brlt	.-64     	; 0x490 <getPCTime+0x68>
 4d0:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 4d4:	1e 82       	std	Y+6, r1	; 0x06
 4d6:	1d 82       	std	Y+5, r1	; 0x05
 4d8:	1c c0       	rjmp	.+56     	; 0x512 <getPCTime+0xea>
 4da:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 4de:	48 2f       	mov	r20, r24
 4e0:	9e 01       	movw	r18, r28
 4e2:	2b 5e       	subi	r18, 0xEB	; 235
 4e4:	3f 4f       	sbci	r19, 0xFF	; 255
 4e6:	8d 81       	ldd	r24, Y+5	; 0x05
 4e8:	9e 81       	ldd	r25, Y+6	; 0x06
 4ea:	82 0f       	add	r24, r18
 4ec:	93 1f       	adc	r25, r19
 4ee:	fc 01       	movw	r30, r24
 4f0:	40 83       	st	Z, r20
 4f2:	9e 01       	movw	r18, r28
 4f4:	2b 5e       	subi	r18, 0xEB	; 235
 4f6:	3f 4f       	sbci	r19, 0xFF	; 255
 4f8:	8d 81       	ldd	r24, Y+5	; 0x05
 4fa:	9e 81       	ldd	r25, Y+6	; 0x06
 4fc:	82 0f       	add	r24, r18
 4fe:	93 1f       	adc	r25, r19
 500:	fc 01       	movw	r30, r24
 502:	80 81       	ld	r24, Z
 504:	0e 94 b2 04 	call	0x964	; 0x964 <usart_putc>
 508:	8d 81       	ldd	r24, Y+5	; 0x05
 50a:	9e 81       	ldd	r25, Y+6	; 0x06
 50c:	01 96       	adiw	r24, 0x01	; 1
 50e:	9e 83       	std	Y+6, r25	; 0x06
 510:	8d 83       	std	Y+5, r24	; 0x05
 512:	8d 81       	ldd	r24, Y+5	; 0x05
 514:	9e 81       	ldd	r25, Y+6	; 0x06
 516:	02 97       	sbiw	r24, 0x02	; 2
 518:	04 f3       	brlt	.-64     	; 0x4da <getPCTime+0xb2>
 51a:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 51e:	18 86       	std	Y+8, r1	; 0x08
 520:	1f 82       	std	Y+7, r1	; 0x07
 522:	1c c0       	rjmp	.+56     	; 0x55c <getPCTime+0x134>
 524:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 528:	48 2f       	mov	r20, r24
 52a:	9e 01       	movw	r18, r28
 52c:	28 5e       	subi	r18, 0xE8	; 232
 52e:	3f 4f       	sbci	r19, 0xFF	; 255
 530:	8f 81       	ldd	r24, Y+7	; 0x07
 532:	98 85       	ldd	r25, Y+8	; 0x08
 534:	82 0f       	add	r24, r18
 536:	93 1f       	adc	r25, r19
 538:	fc 01       	movw	r30, r24
 53a:	40 83       	st	Z, r20
 53c:	9e 01       	movw	r18, r28
 53e:	28 5e       	subi	r18, 0xE8	; 232
 540:	3f 4f       	sbci	r19, 0xFF	; 255
 542:	8f 81       	ldd	r24, Y+7	; 0x07
 544:	98 85       	ldd	r25, Y+8	; 0x08
 546:	82 0f       	add	r24, r18
 548:	93 1f       	adc	r25, r19
 54a:	fc 01       	movw	r30, r24
 54c:	80 81       	ld	r24, Z
 54e:	0e 94 b2 04 	call	0x964	; 0x964 <usart_putc>
 552:	8f 81       	ldd	r24, Y+7	; 0x07
 554:	98 85       	ldd	r25, Y+8	; 0x08
 556:	01 96       	adiw	r24, 0x01	; 1
 558:	98 87       	std	Y+8, r25	; 0x08
 55a:	8f 83       	std	Y+7, r24	; 0x07
 55c:	8f 81       	ldd	r24, Y+7	; 0x07
 55e:	98 85       	ldd	r25, Y+8	; 0x08
 560:	02 97       	sbiw	r24, 0x02	; 2
 562:	04 f3       	brlt	.-64     	; 0x524 <getPCTime+0xfc>
 564:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 568:	1a 86       	std	Y+10, r1	; 0x0a
 56a:	19 86       	std	Y+9, r1	; 0x09
 56c:	1c c0       	rjmp	.+56     	; 0x5a6 <getPCTime+0x17e>
 56e:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 572:	48 2f       	mov	r20, r24
 574:	9e 01       	movw	r18, r28
 576:	25 5e       	subi	r18, 0xE5	; 229
 578:	3f 4f       	sbci	r19, 0xFF	; 255
 57a:	89 85       	ldd	r24, Y+9	; 0x09
 57c:	9a 85       	ldd	r25, Y+10	; 0x0a
 57e:	82 0f       	add	r24, r18
 580:	93 1f       	adc	r25, r19
 582:	fc 01       	movw	r30, r24
 584:	40 83       	st	Z, r20
 586:	9e 01       	movw	r18, r28
 588:	25 5e       	subi	r18, 0xE5	; 229
 58a:	3f 4f       	sbci	r19, 0xFF	; 255
 58c:	89 85       	ldd	r24, Y+9	; 0x09
 58e:	9a 85       	ldd	r25, Y+10	; 0x0a
 590:	82 0f       	add	r24, r18
 592:	93 1f       	adc	r25, r19
 594:	fc 01       	movw	r30, r24
 596:	80 81       	ld	r24, Z
 598:	0e 94 b2 04 	call	0x964	; 0x964 <usart_putc>
 59c:	89 85       	ldd	r24, Y+9	; 0x09
 59e:	9a 85       	ldd	r25, Y+10	; 0x0a
 5a0:	01 96       	adiw	r24, 0x01	; 1
 5a2:	9a 87       	std	Y+10, r25	; 0x0a
 5a4:	89 87       	std	Y+9, r24	; 0x09
 5a6:	89 85       	ldd	r24, Y+9	; 0x09
 5a8:	9a 85       	ldd	r25, Y+10	; 0x0a
 5aa:	02 97       	sbiw	r24, 0x02	; 2
 5ac:	04 f3       	brlt	.-64     	; 0x56e <getPCTime+0x146>
 5ae:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 5b2:	1c 86       	std	Y+12, r1	; 0x0c
 5b4:	1b 86       	std	Y+11, r1	; 0x0b
 5b6:	1c c0       	rjmp	.+56     	; 0x5f0 <getPCTime+0x1c8>
 5b8:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 5bc:	48 2f       	mov	r20, r24
 5be:	9e 01       	movw	r18, r28
 5c0:	22 5e       	subi	r18, 0xE2	; 226
 5c2:	3f 4f       	sbci	r19, 0xFF	; 255
 5c4:	8b 85       	ldd	r24, Y+11	; 0x0b
 5c6:	9c 85       	ldd	r25, Y+12	; 0x0c
 5c8:	82 0f       	add	r24, r18
 5ca:	93 1f       	adc	r25, r19
 5cc:	fc 01       	movw	r30, r24
 5ce:	40 83       	st	Z, r20
 5d0:	9e 01       	movw	r18, r28
 5d2:	22 5e       	subi	r18, 0xE2	; 226
 5d4:	3f 4f       	sbci	r19, 0xFF	; 255
 5d6:	8b 85       	ldd	r24, Y+11	; 0x0b
 5d8:	9c 85       	ldd	r25, Y+12	; 0x0c
 5da:	82 0f       	add	r24, r18
 5dc:	93 1f       	adc	r25, r19
 5de:	fc 01       	movw	r30, r24
 5e0:	80 81       	ld	r24, Z
 5e2:	0e 94 b2 04 	call	0x964	; 0x964 <usart_putc>
 5e6:	8b 85       	ldd	r24, Y+11	; 0x0b
 5e8:	9c 85       	ldd	r25, Y+12	; 0x0c
 5ea:	01 96       	adiw	r24, 0x01	; 1
 5ec:	9c 87       	std	Y+12, r25	; 0x0c
 5ee:	8b 87       	std	Y+11, r24	; 0x0b
 5f0:	8b 85       	ldd	r24, Y+11	; 0x0b
 5f2:	9c 85       	ldd	r25, Y+12	; 0x0c
 5f4:	02 97       	sbiw	r24, 0x02	; 2
 5f6:	04 f3       	brlt	.-64     	; 0x5b8 <getPCTime+0x190>
 5f8:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 5fc:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <usart_getc>
 600:	ce 01       	movw	r24, r28
 602:	0d 96       	adiw	r24, 0x0d	; 13
 604:	0e 94 97 06 	call	0xd2e	; 0xd2e <atoi>
 608:	9c 01       	movw	r18, r24
 60a:	2c 56       	subi	r18, 0x6C	; 108
 60c:	37 40       	sbci	r19, 0x07	; 7
 60e:	89 a1       	ldd	r24, Y+33	; 0x21
 610:	9a a1       	ldd	r25, Y+34	; 0x22
 612:	fc 01       	movw	r30, r24
 614:	37 83       	std	Z+7, r19	; 0x07
 616:	26 83       	std	Z+6, r18	; 0x06
 618:	ce 01       	movw	r24, r28
 61a:	42 96       	adiw	r24, 0x12	; 18
 61c:	0e 94 97 06 	call	0xd2e	; 0xd2e <atoi>
 620:	28 2f       	mov	r18, r24
 622:	89 a1       	ldd	r24, Y+33	; 0x21
 624:	9a a1       	ldd	r25, Y+34	; 0x22
 626:	fc 01       	movw	r30, r24
 628:	25 83       	std	Z+5, r18	; 0x05
 62a:	ce 01       	movw	r24, r28
 62c:	45 96       	adiw	r24, 0x15	; 21
 62e:	0e 94 97 06 	call	0xd2e	; 0xd2e <atoi>
 632:	28 2f       	mov	r18, r24
 634:	89 a1       	ldd	r24, Y+33	; 0x21
 636:	9a a1       	ldd	r25, Y+34	; 0x22
 638:	fc 01       	movw	r30, r24
 63a:	23 83       	std	Z+3, r18	; 0x03
 63c:	ce 01       	movw	r24, r28
 63e:	48 96       	adiw	r24, 0x18	; 24
 640:	0e 94 97 06 	call	0xd2e	; 0xd2e <atoi>
 644:	28 2f       	mov	r18, r24
 646:	89 a1       	ldd	r24, Y+33	; 0x21
 648:	9a a1       	ldd	r25, Y+34	; 0x22
 64a:	fc 01       	movw	r30, r24
 64c:	22 83       	std	Z+2, r18	; 0x02
 64e:	ce 01       	movw	r24, r28
 650:	4b 96       	adiw	r24, 0x1b	; 27
 652:	0e 94 97 06 	call	0xd2e	; 0xd2e <atoi>
 656:	28 2f       	mov	r18, r24
 658:	89 a1       	ldd	r24, Y+33	; 0x21
 65a:	9a a1       	ldd	r25, Y+34	; 0x22
 65c:	fc 01       	movw	r30, r24
 65e:	21 83       	std	Z+1, r18	; 0x01
 660:	ce 01       	movw	r24, r28
 662:	4e 96       	adiw	r24, 0x1e	; 30
 664:	0e 94 97 06 	call	0xd2e	; 0xd2e <atoi>
 668:	28 2f       	mov	r18, r24
 66a:	89 a1       	ldd	r24, Y+33	; 0x21
 66c:	9a a1       	ldd	r25, Y+34	; 0x22
 66e:	fc 01       	movw	r30, r24
 670:	20 83       	st	Z, r18
 672:	00 00       	nop
 674:	a2 96       	adiw	r28, 0x22	; 34
 676:	0f b6       	in	r0, 0x3f	; 63
 678:	f8 94       	cli
 67a:	de bf       	out	0x3e, r29	; 62
 67c:	0f be       	out	0x3f, r0	; 63
 67e:	cd bf       	out	0x3d, r28	; 61
 680:	df 91       	pop	r29
 682:	cf 91       	pop	r28
 684:	08 95       	ret

00000686 <setPCF8583Time>:
 686:	1f 93       	push	r17
 688:	cf 93       	push	r28
 68a:	df 93       	push	r29
 68c:	00 d0       	rcall	.+0      	; 0x68e <setPCF8583Time+0x8>
 68e:	cd b7       	in	r28, 0x3d	; 61
 690:	de b7       	in	r29, 0x3e	; 62
 692:	9a 83       	std	Y+2, r25	; 0x02
 694:	89 83       	std	Y+1, r24	; 0x01
 696:	80 ea       	ldi	r24, 0xA0	; 160
 698:	0e 94 8c 05 	call	0xb18	; 0xb18 <i2c_start_wait>
 69c:	80 e0       	ldi	r24, 0x00	; 0
 69e:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <i2c_write>
 6a2:	80 e8       	ldi	r24, 0x80	; 128
 6a4:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <i2c_write>
 6a8:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <i2c_stop>
 6ac:	81 e6       	ldi	r24, 0x61	; 97
 6ae:	0e 94 b2 04 	call	0x964	; 0x964 <usart_putc>
 6b2:	80 ea       	ldi	r24, 0xA0	; 160
 6b4:	0e 94 8c 05 	call	0xb18	; 0xb18 <i2c_start_wait>
 6b8:	82 e0       	ldi	r24, 0x02	; 2
 6ba:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <i2c_write>
 6be:	89 81       	ldd	r24, Y+1	; 0x01
 6c0:	9a 81       	ldd	r25, Y+2	; 0x02
 6c2:	fc 01       	movw	r30, r24
 6c4:	80 81       	ld	r24, Z
 6c6:	0e 94 4f 06 	call	0xc9e	; 0xc9e <to_bcd>
 6ca:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <i2c_write>
 6ce:	89 81       	ldd	r24, Y+1	; 0x01
 6d0:	9a 81       	ldd	r25, Y+2	; 0x02
 6d2:	fc 01       	movw	r30, r24
 6d4:	81 81       	ldd	r24, Z+1	; 0x01
 6d6:	0e 94 4f 06 	call	0xc9e	; 0xc9e <to_bcd>
 6da:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <i2c_write>
 6de:	89 81       	ldd	r24, Y+1	; 0x01
 6e0:	9a 81       	ldd	r25, Y+2	; 0x02
 6e2:	fc 01       	movw	r30, r24
 6e4:	82 81       	ldd	r24, Z+2	; 0x02
 6e6:	0e 94 4f 06 	call	0xc9e	; 0xc9e <to_bcd>
 6ea:	8f 73       	andi	r24, 0x3F	; 63
 6ec:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <i2c_write>
 6f0:	89 81       	ldd	r24, Y+1	; 0x01
 6f2:	9a 81       	ldd	r25, Y+2	; 0x02
 6f4:	fc 01       	movw	r30, r24
 6f6:	86 81       	ldd	r24, Z+6	; 0x06
 6f8:	97 81       	ldd	r25, Z+7	; 0x07
 6fa:	00 24       	eor	r0, r0
 6fc:	96 95       	lsr	r25
 6fe:	87 95       	ror	r24
 700:	07 94       	ror	r0
 702:	96 95       	lsr	r25
 704:	87 95       	ror	r24
 706:	07 94       	ror	r0
 708:	98 2f       	mov	r25, r24
 70a:	80 2d       	mov	r24, r0
 70c:	18 2f       	mov	r17, r24
 70e:	89 81       	ldd	r24, Y+1	; 0x01
 710:	9a 81       	ldd	r25, Y+2	; 0x02
 712:	fc 01       	movw	r30, r24
 714:	80 85       	ldd	r24, Z+8	; 0x08
 716:	91 85       	ldd	r25, Z+9	; 0x09
 718:	0e 94 4f 06 	call	0xc9e	; 0xc9e <to_bcd>
 71c:	81 0f       	add	r24, r17
 71e:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <i2c_write>
 722:	89 81       	ldd	r24, Y+1	; 0x01
 724:	9a 81       	ldd	r25, Y+2	; 0x02
 726:	fc 01       	movw	r30, r24
 728:	85 81       	ldd	r24, Z+5	; 0x05
 72a:	0e 94 4f 06 	call	0xc9e	; 0xc9e <to_bcd>
 72e:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <i2c_write>
 732:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <i2c_stop>
 736:	82 e6       	ldi	r24, 0x62	; 98
 738:	0e 94 b2 04 	call	0x964	; 0x964 <usart_putc>
 73c:	80 ea       	ldi	r24, 0xA0	; 160
 73e:	0e 94 8c 05 	call	0xb18	; 0xb18 <i2c_start_wait>
 742:	80 e0       	ldi	r24, 0x00	; 0
 744:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <i2c_write>
 748:	80 e0       	ldi	r24, 0x00	; 0
 74a:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <i2c_write>
 74e:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <i2c_stop>
 752:	83 e6       	ldi	r24, 0x63	; 99
 754:	0e 94 b2 04 	call	0x964	; 0x964 <usart_putc>
 758:	8a e4       	ldi	r24, 0x4A	; 74
 75a:	91 e0       	ldi	r25, 0x01	; 1
 75c:	0e 94 cd 04 	call	0x99a	; 0x99a <usart_prints>
 760:	00 00       	nop
 762:	0f 90       	pop	r0
 764:	0f 90       	pop	r0
 766:	df 91       	pop	r29
 768:	cf 91       	pop	r28
 76a:	1f 91       	pop	r17
 76c:	08 95       	ret

0000076e <getPCF8583Time>:
 76e:	cf 93       	push	r28
 770:	df 93       	push	r29
 772:	00 d0       	rcall	.+0      	; 0x774 <getPCF8583Time+0x6>
 774:	cd b7       	in	r28, 0x3d	; 61
 776:	de b7       	in	r29, 0x3e	; 62
 778:	9a 83       	std	Y+2, r25	; 0x02
 77a:	89 83       	std	Y+1, r24	; 0x01
 77c:	80 ea       	ldi	r24, 0xA0	; 160
 77e:	0e 94 3f 05 	call	0xa7e	; 0xa7e <i2c_start>
 782:	82 e0       	ldi	r24, 0x02	; 2
 784:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <i2c_write>
 788:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <i2c_stop>
 78c:	81 ea       	ldi	r24, 0xA1	; 161
 78e:	0e 94 3f 05 	call	0xa7e	; 0xa7e <i2c_start>
 792:	0e 94 21 06 	call	0xc42	; 0xc42 <i2c_readAck>
 796:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <from_bcd>
 79a:	28 2f       	mov	r18, r24
 79c:	89 81       	ldd	r24, Y+1	; 0x01
 79e:	9a 81       	ldd	r25, Y+2	; 0x02
 7a0:	fc 01       	movw	r30, r24
 7a2:	20 83       	st	Z, r18
 7a4:	0e 94 21 06 	call	0xc42	; 0xc42 <i2c_readAck>
 7a8:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <from_bcd>
 7ac:	28 2f       	mov	r18, r24
 7ae:	89 81       	ldd	r24, Y+1	; 0x01
 7b0:	9a 81       	ldd	r25, Y+2	; 0x02
 7b2:	fc 01       	movw	r30, r24
 7b4:	21 83       	std	Z+1, r18	; 0x01
 7b6:	0e 94 21 06 	call	0xc42	; 0xc42 <i2c_readAck>
 7ba:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <from_bcd>
 7be:	28 2f       	mov	r18, r24
 7c0:	89 81       	ldd	r24, Y+1	; 0x01
 7c2:	9a 81       	ldd	r25, Y+2	; 0x02
 7c4:	fc 01       	movw	r30, r24
 7c6:	22 83       	std	Z+2, r18	; 0x02
 7c8:	0e 94 21 06 	call	0xc42	; 0xc42 <i2c_readAck>
 7cc:	8f 73       	andi	r24, 0x3F	; 63
 7ce:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <from_bcd>
 7d2:	28 2f       	mov	r18, r24
 7d4:	30 e0       	ldi	r19, 0x00	; 0
 7d6:	89 81       	ldd	r24, Y+1	; 0x01
 7d8:	9a 81       	ldd	r25, Y+2	; 0x02
 7da:	fc 01       	movw	r30, r24
 7dc:	31 87       	std	Z+9, r19	; 0x09
 7de:	20 87       	std	Z+8, r18	; 0x08
 7e0:	0e 94 38 06 	call	0xc70	; 0xc70 <i2c_readNak>
 7e4:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <from_bcd>
 7e8:	28 2f       	mov	r18, r24
 7ea:	89 81       	ldd	r24, Y+1	; 0x01
 7ec:	9a 81       	ldd	r25, Y+2	; 0x02
 7ee:	fc 01       	movw	r30, r24
 7f0:	25 83       	std	Z+5, r18	; 0x05
 7f2:	00 00       	nop
 7f4:	0f 90       	pop	r0
 7f6:	0f 90       	pop	r0
 7f8:	df 91       	pop	r29
 7fa:	cf 91       	pop	r28
 7fc:	08 95       	ret

000007fe <__vector_18>:
 7fe:	1f 92       	push	r1
 800:	0f 92       	push	r0
 802:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 806:	0f 92       	push	r0
 808:	11 24       	eor	r1, r1
 80a:	2f 93       	push	r18
 80c:	8f 93       	push	r24
 80e:	9f 93       	push	r25
 810:	ef 93       	push	r30
 812:	ff 93       	push	r31
 814:	cf 93       	push	r28
 816:	df 93       	push	r29
 818:	1f 92       	push	r1
 81a:	cd b7       	in	r28, 0x3d	; 61
 81c:	de b7       	in	r29, 0x3e	; 62
 81e:	86 ec       	ldi	r24, 0xC6	; 198
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	fc 01       	movw	r30, r24
 824:	80 81       	ld	r24, Z
 826:	89 83       	std	Y+1, r24	; 0x01
 828:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <__data_end>
 82c:	88 2f       	mov	r24, r24
 82e:	90 e0       	ldi	r25, 0x00	; 0
 830:	88 58       	subi	r24, 0x88	; 136
 832:	9e 4f       	sbci	r25, 0xFE	; 254
 834:	29 81       	ldd	r18, Y+1	; 0x01
 836:	fc 01       	movw	r30, r24
 838:	20 83       	st	Z, r18
 83a:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <__data_end>
 83e:	8f 33       	cpi	r24, 0x3F	; 63
 840:	19 f4       	brne	.+6      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 842:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <__data_end>
 846:	05 c0       	rjmp	.+10     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 848:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <__data_end>
 84c:	8f 5f       	subi	r24, 0xFF	; 255
 84e:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <__data_end>
 852:	00 00       	nop
 854:	0f 90       	pop	r0
 856:	df 91       	pop	r29
 858:	cf 91       	pop	r28
 85a:	ff 91       	pop	r31
 85c:	ef 91       	pop	r30
 85e:	9f 91       	pop	r25
 860:	8f 91       	pop	r24
 862:	2f 91       	pop	r18
 864:	0f 90       	pop	r0
 866:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 86a:	0f 90       	pop	r0
 86c:	1f 90       	pop	r1
 86e:	18 95       	reti

00000870 <usart_clear>:
 870:	cf 93       	push	r28
 872:	df 93       	push	r29
 874:	cd b7       	in	r28, 0x3d	; 61
 876:	de b7       	in	r29, 0x3e	; 62
 878:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <__data_end>
 87c:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <rx_buffer_tail>
 880:	00 00       	nop
 882:	df 91       	pop	r29
 884:	cf 91       	pop	r28
 886:	08 95       	ret

00000888 <usart_init>:
 888:	cf 93       	push	r28
 88a:	df 93       	push	r29
 88c:	00 d0       	rcall	.+0      	; 0x88e <usart_init+0x6>
 88e:	cd b7       	in	r28, 0x3d	; 61
 890:	de b7       	in	r29, 0x3e	; 62
 892:	87 e6       	ldi	r24, 0x67	; 103
 894:	90 e0       	ldi	r25, 0x00	; 0
 896:	9a 83       	std	Y+2, r25	; 0x02
 898:	89 83       	std	Y+1, r24	; 0x01
 89a:	85 ec       	ldi	r24, 0xC5	; 197
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	fc 01       	movw	r30, r24
 8a0:	10 82       	st	Z, r1
 8a2:	84 ec       	ldi	r24, 0xC4	; 196
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	29 81       	ldd	r18, Y+1	; 0x01
 8a8:	fc 01       	movw	r30, r24
 8aa:	20 83       	st	Z, r18
 8ac:	81 ec       	ldi	r24, 0xC1	; 193
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	28 e9       	ldi	r18, 0x98	; 152
 8b2:	fc 01       	movw	r30, r24
 8b4:	20 83       	st	Z, r18
 8b6:	82 ec       	ldi	r24, 0xC2	; 194
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	26 e0       	ldi	r18, 0x06	; 6
 8bc:	fc 01       	movw	r30, r24
 8be:	20 83       	st	Z, r18
 8c0:	8a e2       	ldi	r24, 0x2A	; 42
 8c2:	90 e0       	ldi	r25, 0x00	; 0
 8c4:	2a e2       	ldi	r18, 0x2A	; 42
 8c6:	30 e0       	ldi	r19, 0x00	; 0
 8c8:	f9 01       	movw	r30, r18
 8ca:	20 81       	ld	r18, Z
 8cc:	22 60       	ori	r18, 0x02	; 2
 8ce:	fc 01       	movw	r30, r24
 8d0:	20 83       	st	Z, r18
 8d2:	8a e2       	ldi	r24, 0x2A	; 42
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	2a e2       	ldi	r18, 0x2A	; 42
 8d8:	30 e0       	ldi	r19, 0x00	; 0
 8da:	f9 01       	movw	r30, r18
 8dc:	20 81       	ld	r18, Z
 8de:	2e 7f       	andi	r18, 0xFE	; 254
 8e0:	fc 01       	movw	r30, r24
 8e2:	20 83       	st	Z, r18
 8e4:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <__data_end>
 8e8:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <rx_buffer_tail>
 8ec:	00 00       	nop
 8ee:	0f 90       	pop	r0
 8f0:	0f 90       	pop	r0
 8f2:	df 91       	pop	r29
 8f4:	cf 91       	pop	r28
 8f6:	08 95       	ret

000008f8 <usart_printf>:
 8f8:	cf 93       	push	r28
 8fa:	df 93       	push	r29
 8fc:	cd b7       	in	r28, 0x3d	; 61
 8fe:	de b7       	in	r29, 0x3e	; 62
 900:	29 97       	sbiw	r28, 0x09	; 9
 902:	0f b6       	in	r0, 0x3f	; 63
 904:	f8 94       	cli
 906:	de bf       	out	0x3e, r29	; 62
 908:	0f be       	out	0x3f, r0	; 63
 90a:	cd bf       	out	0x3d, r28	; 61
 90c:	99 87       	std	Y+9, r25	; 0x09
 90e:	88 87       	std	Y+8, r24	; 0x08
 910:	13 c0       	rjmp	.+38     	; 0x938 <__stack+0x39>
 912:	88 85       	ldd	r24, Y+8	; 0x08
 914:	99 85       	ldd	r25, Y+9	; 0x09
 916:	9c 01       	movw	r18, r24
 918:	2f 5f       	subi	r18, 0xFF	; 255
 91a:	3f 4f       	sbci	r19, 0xFF	; 255
 91c:	39 87       	std	Y+9, r19	; 0x09
 91e:	28 87       	std	Y+8, r18	; 0x08
 920:	9d 83       	std	Y+5, r25	; 0x05
 922:	8c 83       	std	Y+4, r24	; 0x04
 924:	8c 81       	ldd	r24, Y+4	; 0x04
 926:	9d 81       	ldd	r25, Y+5	; 0x05
 928:	fc 01       	movw	r30, r24
 92a:	84 91       	lpm	r24, Z
 92c:	8e 83       	std	Y+6, r24	; 0x06
 92e:	8e 81       	ldd	r24, Y+6	; 0x06
 930:	8f 83       	std	Y+7, r24	; 0x07
 932:	8f 81       	ldd	r24, Y+7	; 0x07
 934:	0e 94 b2 04 	call	0x964	; 0x964 <usart_putc>
 938:	88 85       	ldd	r24, Y+8	; 0x08
 93a:	99 85       	ldd	r25, Y+9	; 0x09
 93c:	9a 83       	std	Y+2, r25	; 0x02
 93e:	89 83       	std	Y+1, r24	; 0x01
 940:	89 81       	ldd	r24, Y+1	; 0x01
 942:	9a 81       	ldd	r25, Y+2	; 0x02
 944:	fc 01       	movw	r30, r24
 946:	84 91       	lpm	r24, Z
 948:	8b 83       	std	Y+3, r24	; 0x03
 94a:	8b 81       	ldd	r24, Y+3	; 0x03
 94c:	88 23       	and	r24, r24
 94e:	09 f7       	brne	.-62     	; 0x912 <__stack+0x13>
 950:	00 00       	nop
 952:	29 96       	adiw	r28, 0x09	; 9
 954:	0f b6       	in	r0, 0x3f	; 63
 956:	f8 94       	cli
 958:	de bf       	out	0x3e, r29	; 62
 95a:	0f be       	out	0x3f, r0	; 63
 95c:	cd bf       	out	0x3d, r28	; 61
 95e:	df 91       	pop	r29
 960:	cf 91       	pop	r28
 962:	08 95       	ret

00000964 <usart_putc>:
 964:	cf 93       	push	r28
 966:	df 93       	push	r29
 968:	1f 92       	push	r1
 96a:	cd b7       	in	r28, 0x3d	; 61
 96c:	de b7       	in	r29, 0x3e	; 62
 96e:	89 83       	std	Y+1, r24	; 0x01
 970:	00 00       	nop
 972:	80 ec       	ldi	r24, 0xC0	; 192
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	fc 01       	movw	r30, r24
 978:	80 81       	ld	r24, Z
 97a:	88 2f       	mov	r24, r24
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	80 72       	andi	r24, 0x20	; 32
 980:	99 27       	eor	r25, r25
 982:	89 2b       	or	r24, r25
 984:	b1 f3       	breq	.-20     	; 0x972 <usart_putc+0xe>
 986:	86 ec       	ldi	r24, 0xC6	; 198
 988:	90 e0       	ldi	r25, 0x00	; 0
 98a:	29 81       	ldd	r18, Y+1	; 0x01
 98c:	fc 01       	movw	r30, r24
 98e:	20 83       	st	Z, r18
 990:	00 00       	nop
 992:	0f 90       	pop	r0
 994:	df 91       	pop	r29
 996:	cf 91       	pop	r28
 998:	08 95       	ret

0000099a <usart_prints>:
 99a:	cf 93       	push	r28
 99c:	df 93       	push	r29
 99e:	00 d0       	rcall	.+0      	; 0x9a0 <usart_prints+0x6>
 9a0:	cd b7       	in	r28, 0x3d	; 61
 9a2:	de b7       	in	r29, 0x3e	; 62
 9a4:	9a 83       	std	Y+2, r25	; 0x02
 9a6:	89 83       	std	Y+1, r24	; 0x01
 9a8:	18 c0       	rjmp	.+48     	; 0x9da <usart_prints+0x40>
 9aa:	00 00       	nop
 9ac:	80 ec       	ldi	r24, 0xC0	; 192
 9ae:	90 e0       	ldi	r25, 0x00	; 0
 9b0:	fc 01       	movw	r30, r24
 9b2:	80 81       	ld	r24, Z
 9b4:	88 2f       	mov	r24, r24
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	80 72       	andi	r24, 0x20	; 32
 9ba:	99 27       	eor	r25, r25
 9bc:	89 2b       	or	r24, r25
 9be:	b1 f3       	breq	.-20     	; 0x9ac <usart_prints+0x12>
 9c0:	26 ec       	ldi	r18, 0xC6	; 198
 9c2:	30 e0       	ldi	r19, 0x00	; 0
 9c4:	89 81       	ldd	r24, Y+1	; 0x01
 9c6:	9a 81       	ldd	r25, Y+2	; 0x02
 9c8:	ac 01       	movw	r20, r24
 9ca:	4f 5f       	subi	r20, 0xFF	; 255
 9cc:	5f 4f       	sbci	r21, 0xFF	; 255
 9ce:	5a 83       	std	Y+2, r21	; 0x02
 9d0:	49 83       	std	Y+1, r20	; 0x01
 9d2:	fc 01       	movw	r30, r24
 9d4:	80 81       	ld	r24, Z
 9d6:	f9 01       	movw	r30, r18
 9d8:	80 83       	st	Z, r24
 9da:	89 81       	ldd	r24, Y+1	; 0x01
 9dc:	9a 81       	ldd	r25, Y+2	; 0x02
 9de:	fc 01       	movw	r30, r24
 9e0:	80 81       	ld	r24, Z
 9e2:	88 23       	and	r24, r24
 9e4:	11 f7       	brne	.-60     	; 0x9aa <usart_prints+0x10>
 9e6:	00 00       	nop
 9e8:	0f 90       	pop	r0
 9ea:	0f 90       	pop	r0
 9ec:	df 91       	pop	r29
 9ee:	cf 91       	pop	r28
 9f0:	08 95       	ret

000009f2 <usart_getc>:
 9f2:	cf 93       	push	r28
 9f4:	df 93       	push	r29
 9f6:	1f 92       	push	r1
 9f8:	cd b7       	in	r28, 0x3d	; 61
 9fa:	de b7       	in	r29, 0x3e	; 62
 9fc:	00 00       	nop
 9fe:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <rx_buffer_tail>
 a02:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <__data_end>
 a06:	98 17       	cp	r25, r24
 a08:	d1 f3       	breq	.-12     	; 0x9fe <usart_getc+0xc>
 a0a:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <rx_buffer_tail>
 a0e:	88 2f       	mov	r24, r24
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	88 58       	subi	r24, 0x88	; 136
 a14:	9e 4f       	sbci	r25, 0xFE	; 254
 a16:	fc 01       	movw	r30, r24
 a18:	80 81       	ld	r24, Z
 a1a:	89 83       	std	Y+1, r24	; 0x01
 a1c:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <rx_buffer_tail>
 a20:	8f 33       	cpi	r24, 0x3F	; 63
 a22:	19 f4       	brne	.+6      	; 0xa2a <usart_getc+0x38>
 a24:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <rx_buffer_tail>
 a28:	05 c0       	rjmp	.+10     	; 0xa34 <usart_getc+0x42>
 a2a:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <rx_buffer_tail>
 a2e:	8f 5f       	subi	r24, 0xFF	; 255
 a30:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <rx_buffer_tail>
 a34:	89 81       	ldd	r24, Y+1	; 0x01
 a36:	0f 90       	pop	r0
 a38:	df 91       	pop	r29
 a3a:	cf 91       	pop	r28
 a3c:	08 95       	ret

00000a3e <uart_buffer_empty>:
 a3e:	cf 93       	push	r28
 a40:	df 93       	push	r29
 a42:	cd b7       	in	r28, 0x3d	; 61
 a44:	de b7       	in	r29, 0x3e	; 62
 a46:	20 91 77 01 	lds	r18, 0x0177	; 0x800177 <rx_buffer_tail>
 a4a:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <__data_end>
 a4e:	81 e0       	ldi	r24, 0x01	; 1
 a50:	29 17       	cp	r18, r25
 a52:	09 f0       	breq	.+2      	; 0xa56 <uart_buffer_empty+0x18>
 a54:	80 e0       	ldi	r24, 0x00	; 0
 a56:	df 91       	pop	r29
 a58:	cf 91       	pop	r28
 a5a:	08 95       	ret

00000a5c <i2c_init>:
 a5c:	cf 93       	push	r28
 a5e:	df 93       	push	r29
 a60:	cd b7       	in	r28, 0x3d	; 61
 a62:	de b7       	in	r29, 0x3e	; 62
 a64:	89 eb       	ldi	r24, 0xB9	; 185
 a66:	90 e0       	ldi	r25, 0x00	; 0
 a68:	fc 01       	movw	r30, r24
 a6a:	10 82       	st	Z, r1
 a6c:	88 eb       	ldi	r24, 0xB8	; 184
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	28 e4       	ldi	r18, 0x48	; 72
 a72:	fc 01       	movw	r30, r24
 a74:	20 83       	st	Z, r18
 a76:	00 00       	nop
 a78:	df 91       	pop	r29
 a7a:	cf 91       	pop	r28
 a7c:	08 95       	ret

00000a7e <i2c_start>:
 a7e:	cf 93       	push	r28
 a80:	df 93       	push	r29
 a82:	00 d0       	rcall	.+0      	; 0xa84 <i2c_start+0x6>
 a84:	cd b7       	in	r28, 0x3d	; 61
 a86:	de b7       	in	r29, 0x3e	; 62
 a88:	8a 83       	std	Y+2, r24	; 0x02
 a8a:	8c eb       	ldi	r24, 0xBC	; 188
 a8c:	90 e0       	ldi	r25, 0x00	; 0
 a8e:	24 ea       	ldi	r18, 0xA4	; 164
 a90:	fc 01       	movw	r30, r24
 a92:	20 83       	st	Z, r18
 a94:	84 e5       	ldi	r24, 0x54	; 84
 a96:	91 e0       	ldi	r25, 0x01	; 1
 a98:	0e 94 cd 04 	call	0x99a	; 0x99a <usart_prints>
 a9c:	00 00       	nop
 a9e:	8c eb       	ldi	r24, 0xBC	; 188
 aa0:	90 e0       	ldi	r25, 0x00	; 0
 aa2:	fc 01       	movw	r30, r24
 aa4:	80 81       	ld	r24, Z
 aa6:	88 23       	and	r24, r24
 aa8:	d4 f7       	brge	.-12     	; 0xa9e <i2c_start+0x20>
 aaa:	87 e6       	ldi	r24, 0x67	; 103
 aac:	91 e0       	ldi	r25, 0x01	; 1
 aae:	0e 94 cd 04 	call	0x99a	; 0x99a <usart_prints>
 ab2:	89 eb       	ldi	r24, 0xB9	; 185
 ab4:	90 e0       	ldi	r25, 0x00	; 0
 ab6:	fc 01       	movw	r30, r24
 ab8:	80 81       	ld	r24, Z
 aba:	88 7f       	andi	r24, 0xF8	; 248
 abc:	89 83       	std	Y+1, r24	; 0x01
 abe:	89 81       	ldd	r24, Y+1	; 0x01
 ac0:	88 30       	cpi	r24, 0x08	; 8
 ac2:	29 f0       	breq	.+10     	; 0xace <i2c_start+0x50>
 ac4:	89 81       	ldd	r24, Y+1	; 0x01
 ac6:	80 31       	cpi	r24, 0x10	; 16
 ac8:	11 f0       	breq	.+4      	; 0xace <i2c_start+0x50>
 aca:	81 e0       	ldi	r24, 0x01	; 1
 acc:	20 c0       	rjmp	.+64     	; 0xb0e <i2c_start+0x90>
 ace:	8b eb       	ldi	r24, 0xBB	; 187
 ad0:	90 e0       	ldi	r25, 0x00	; 0
 ad2:	2a 81       	ldd	r18, Y+2	; 0x02
 ad4:	fc 01       	movw	r30, r24
 ad6:	20 83       	st	Z, r18
 ad8:	8c eb       	ldi	r24, 0xBC	; 188
 ada:	90 e0       	ldi	r25, 0x00	; 0
 adc:	24 e8       	ldi	r18, 0x84	; 132
 ade:	fc 01       	movw	r30, r24
 ae0:	20 83       	st	Z, r18
 ae2:	00 00       	nop
 ae4:	8c eb       	ldi	r24, 0xBC	; 188
 ae6:	90 e0       	ldi	r25, 0x00	; 0
 ae8:	fc 01       	movw	r30, r24
 aea:	80 81       	ld	r24, Z
 aec:	88 23       	and	r24, r24
 aee:	d4 f7       	brge	.-12     	; 0xae4 <i2c_start+0x66>
 af0:	89 eb       	ldi	r24, 0xB9	; 185
 af2:	90 e0       	ldi	r25, 0x00	; 0
 af4:	fc 01       	movw	r30, r24
 af6:	80 81       	ld	r24, Z
 af8:	88 7f       	andi	r24, 0xF8	; 248
 afa:	89 83       	std	Y+1, r24	; 0x01
 afc:	89 81       	ldd	r24, Y+1	; 0x01
 afe:	88 31       	cpi	r24, 0x18	; 24
 b00:	29 f0       	breq	.+10     	; 0xb0c <i2c_start+0x8e>
 b02:	89 81       	ldd	r24, Y+1	; 0x01
 b04:	80 34       	cpi	r24, 0x40	; 64
 b06:	11 f0       	breq	.+4      	; 0xb0c <i2c_start+0x8e>
 b08:	81 e0       	ldi	r24, 0x01	; 1
 b0a:	01 c0       	rjmp	.+2      	; 0xb0e <i2c_start+0x90>
 b0c:	80 e0       	ldi	r24, 0x00	; 0
 b0e:	0f 90       	pop	r0
 b10:	0f 90       	pop	r0
 b12:	df 91       	pop	r29
 b14:	cf 91       	pop	r28
 b16:	08 95       	ret

00000b18 <i2c_start_wait>:
 b18:	cf 93       	push	r28
 b1a:	df 93       	push	r29
 b1c:	00 d0       	rcall	.+0      	; 0xb1e <i2c_start_wait+0x6>
 b1e:	cd b7       	in	r28, 0x3d	; 61
 b20:	de b7       	in	r29, 0x3e	; 62
 b22:	8a 83       	std	Y+2, r24	; 0x02
 b24:	8c eb       	ldi	r24, 0xBC	; 188
 b26:	90 e0       	ldi	r25, 0x00	; 0
 b28:	24 ea       	ldi	r18, 0xA4	; 164
 b2a:	fc 01       	movw	r30, r24
 b2c:	20 83       	st	Z, r18
 b2e:	00 00       	nop
 b30:	8c eb       	ldi	r24, 0xBC	; 188
 b32:	90 e0       	ldi	r25, 0x00	; 0
 b34:	fc 01       	movw	r30, r24
 b36:	80 81       	ld	r24, Z
 b38:	88 23       	and	r24, r24
 b3a:	d4 f7       	brge	.-12     	; 0xb30 <i2c_start_wait+0x18>
 b3c:	89 eb       	ldi	r24, 0xB9	; 185
 b3e:	90 e0       	ldi	r25, 0x00	; 0
 b40:	fc 01       	movw	r30, r24
 b42:	80 81       	ld	r24, Z
 b44:	88 7f       	andi	r24, 0xF8	; 248
 b46:	89 83       	std	Y+1, r24	; 0x01
 b48:	89 81       	ldd	r24, Y+1	; 0x01
 b4a:	88 30       	cpi	r24, 0x08	; 8
 b4c:	19 f0       	breq	.+6      	; 0xb54 <i2c_start_wait+0x3c>
 b4e:	89 81       	ldd	r24, Y+1	; 0x01
 b50:	80 31       	cpi	r24, 0x10	; 16
 b52:	71 f5       	brne	.+92     	; 0xbb0 <i2c_start_wait+0x98>
 b54:	8b eb       	ldi	r24, 0xBB	; 187
 b56:	90 e0       	ldi	r25, 0x00	; 0
 b58:	2a 81       	ldd	r18, Y+2	; 0x02
 b5a:	fc 01       	movw	r30, r24
 b5c:	20 83       	st	Z, r18
 b5e:	8c eb       	ldi	r24, 0xBC	; 188
 b60:	90 e0       	ldi	r25, 0x00	; 0
 b62:	24 e8       	ldi	r18, 0x84	; 132
 b64:	fc 01       	movw	r30, r24
 b66:	20 83       	st	Z, r18
 b68:	00 00       	nop
 b6a:	8c eb       	ldi	r24, 0xBC	; 188
 b6c:	90 e0       	ldi	r25, 0x00	; 0
 b6e:	fc 01       	movw	r30, r24
 b70:	80 81       	ld	r24, Z
 b72:	88 23       	and	r24, r24
 b74:	d4 f7       	brge	.-12     	; 0xb6a <i2c_start_wait+0x52>
 b76:	89 eb       	ldi	r24, 0xB9	; 185
 b78:	90 e0       	ldi	r25, 0x00	; 0
 b7a:	fc 01       	movw	r30, r24
 b7c:	80 81       	ld	r24, Z
 b7e:	88 7f       	andi	r24, 0xF8	; 248
 b80:	89 83       	std	Y+1, r24	; 0x01
 b82:	89 81       	ldd	r24, Y+1	; 0x01
 b84:	80 32       	cpi	r24, 0x20	; 32
 b86:	19 f0       	breq	.+6      	; 0xb8e <i2c_start_wait+0x76>
 b88:	89 81       	ldd	r24, Y+1	; 0x01
 b8a:	88 35       	cpi	r24, 0x58	; 88
 b8c:	99 f4       	brne	.+38     	; 0xbb4 <i2c_start_wait+0x9c>
 b8e:	8c eb       	ldi	r24, 0xBC	; 188
 b90:	90 e0       	ldi	r25, 0x00	; 0
 b92:	24 e9       	ldi	r18, 0x94	; 148
 b94:	fc 01       	movw	r30, r24
 b96:	20 83       	st	Z, r18
 b98:	00 00       	nop
 b9a:	8c eb       	ldi	r24, 0xBC	; 188
 b9c:	90 e0       	ldi	r25, 0x00	; 0
 b9e:	fc 01       	movw	r30, r24
 ba0:	80 81       	ld	r24, Z
 ba2:	88 2f       	mov	r24, r24
 ba4:	90 e0       	ldi	r25, 0x00	; 0
 ba6:	80 71       	andi	r24, 0x10	; 16
 ba8:	99 27       	eor	r25, r25
 baa:	89 2b       	or	r24, r25
 bac:	b1 f7       	brne	.-20     	; 0xb9a <i2c_start_wait+0x82>
 bae:	01 c0       	rjmp	.+2      	; 0xbb2 <i2c_start_wait+0x9a>
 bb0:	00 00       	nop
 bb2:	b8 cf       	rjmp	.-144    	; 0xb24 <i2c_start_wait+0xc>
 bb4:	00 00       	nop
 bb6:	00 00       	nop
 bb8:	0f 90       	pop	r0
 bba:	0f 90       	pop	r0
 bbc:	df 91       	pop	r29
 bbe:	cf 91       	pop	r28
 bc0:	08 95       	ret

00000bc2 <i2c_stop>:

/*************************************************************************
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
 bc2:	cf 93       	push	r28
 bc4:	df 93       	push	r29
 bc6:	cd b7       	in	r28, 0x3d	; 61
 bc8:	de b7       	in	r29, 0x3e	; 62
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 bca:	8c eb       	ldi	r24, 0xBC	; 188
 bcc:	90 e0       	ldi	r25, 0x00	; 0
 bce:	24 e9       	ldi	r18, 0x94	; 148
 bd0:	fc 01       	movw	r30, r24
 bd2:	20 83       	st	Z, r18
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
 bd4:	00 00       	nop
 bd6:	8c eb       	ldi	r24, 0xBC	; 188
 bd8:	90 e0       	ldi	r25, 0x00	; 0
 bda:	fc 01       	movw	r30, r24
 bdc:	80 81       	ld	r24, Z
 bde:	88 2f       	mov	r24, r24
 be0:	90 e0       	ldi	r25, 0x00	; 0
 be2:	80 71       	andi	r24, 0x10	; 16
 be4:	99 27       	eor	r25, r25
 be6:	89 2b       	or	r24, r25
 be8:	b1 f7       	brne	.-20     	; 0xbd6 <i2c_stop+0x14>

}/* i2c_stop */
 bea:	00 00       	nop
 bec:	df 91       	pop	r29
 bee:	cf 91       	pop	r28
 bf0:	08 95       	ret

00000bf2 <i2c_write>:
  Input:    byte to be transfered
  Return:   0 write successful 
            1 write failed
*************************************************************************/
unsigned char i2c_write( unsigned char data )
{	
 bf2:	cf 93       	push	r28
 bf4:	df 93       	push	r29
 bf6:	00 d0       	rcall	.+0      	; 0xbf8 <i2c_write+0x6>
 bf8:	cd b7       	in	r28, 0x3d	; 61
 bfa:	de b7       	in	r29, 0x3e	; 62
 bfc:	8a 83       	std	Y+2, r24	; 0x02
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
 bfe:	8b eb       	ldi	r24, 0xBB	; 187
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	2a 81       	ldd	r18, Y+2	; 0x02
 c04:	fc 01       	movw	r30, r24
 c06:	20 83       	st	Z, r18
	TWCR = (1<<TWINT) | (1<<TWEN);
 c08:	8c eb       	ldi	r24, 0xBC	; 188
 c0a:	90 e0       	ldi	r25, 0x00	; 0
 c0c:	24 e8       	ldi	r18, 0x84	; 132
 c0e:	fc 01       	movw	r30, r24
 c10:	20 83       	st	Z, r18

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
 c12:	00 00       	nop
 c14:	8c eb       	ldi	r24, 0xBC	; 188
 c16:	90 e0       	ldi	r25, 0x00	; 0
 c18:	fc 01       	movw	r30, r24
 c1a:	80 81       	ld	r24, Z
 c1c:	88 23       	and	r24, r24
 c1e:	d4 f7       	brge	.-12     	; 0xc14 <i2c_write+0x22>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
 c20:	89 eb       	ldi	r24, 0xB9	; 185
 c22:	90 e0       	ldi	r25, 0x00	; 0
 c24:	fc 01       	movw	r30, r24
 c26:	80 81       	ld	r24, Z
 c28:	88 7f       	andi	r24, 0xF8	; 248
 c2a:	89 83       	std	Y+1, r24	; 0x01
	if( twst != TW_MT_DATA_ACK) return 1;
 c2c:	89 81       	ldd	r24, Y+1	; 0x01
 c2e:	88 32       	cpi	r24, 0x28	; 40
 c30:	11 f0       	breq	.+4      	; 0xc36 <i2c_write+0x44>
 c32:	81 e0       	ldi	r24, 0x01	; 1
 c34:	01 c0       	rjmp	.+2      	; 0xc38 <i2c_write+0x46>
	return 0;
 c36:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_write */
 c38:	0f 90       	pop	r0
 c3a:	0f 90       	pop	r0
 c3c:	df 91       	pop	r29
 c3e:	cf 91       	pop	r28
 c40:	08 95       	ret

00000c42 <i2c_readAck>:
 Read one byte from the I2C device, request more data from device 
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
 c42:	cf 93       	push	r28
 c44:	df 93       	push	r29
 c46:	cd b7       	in	r28, 0x3d	; 61
 c48:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
 c4a:	8c eb       	ldi	r24, 0xBC	; 188
 c4c:	90 e0       	ldi	r25, 0x00	; 0
 c4e:	24 ec       	ldi	r18, 0xC4	; 196
 c50:	fc 01       	movw	r30, r24
 c52:	20 83       	st	Z, r18
	while(!(TWCR & (1<<TWINT)));    
 c54:	00 00       	nop
 c56:	8c eb       	ldi	r24, 0xBC	; 188
 c58:	90 e0       	ldi	r25, 0x00	; 0
 c5a:	fc 01       	movw	r30, r24
 c5c:	80 81       	ld	r24, Z
 c5e:	88 23       	and	r24, r24
 c60:	d4 f7       	brge	.-12     	; 0xc56 <i2c_readAck+0x14>

    return TWDR;
 c62:	8b eb       	ldi	r24, 0xBB	; 187
 c64:	90 e0       	ldi	r25, 0x00	; 0
 c66:	fc 01       	movw	r30, r24
 c68:	80 81       	ld	r24, Z

}/* i2c_readAck */
 c6a:	df 91       	pop	r29
 c6c:	cf 91       	pop	r28
 c6e:	08 95       	ret

00000c70 <i2c_readNak>:
 Read one byte from the I2C device, read is followed by a stop condition 
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
 c70:	cf 93       	push	r28
 c72:	df 93       	push	r29
 c74:	cd b7       	in	r28, 0x3d	; 61
 c76:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1<<TWINT) | (1<<TWEN);
 c78:	8c eb       	ldi	r24, 0xBC	; 188
 c7a:	90 e0       	ldi	r25, 0x00	; 0
 c7c:	24 e8       	ldi	r18, 0x84	; 132
 c7e:	fc 01       	movw	r30, r24
 c80:	20 83       	st	Z, r18
	while(!(TWCR & (1<<TWINT)));
 c82:	00 00       	nop
 c84:	8c eb       	ldi	r24, 0xBC	; 188
 c86:	90 e0       	ldi	r25, 0x00	; 0
 c88:	fc 01       	movw	r30, r24
 c8a:	80 81       	ld	r24, Z
 c8c:	88 23       	and	r24, r24
 c8e:	d4 f7       	brge	.-12     	; 0xc84 <i2c_readNak+0x14>
	
    return TWDR;
 c90:	8b eb       	ldi	r24, 0xBB	; 187
 c92:	90 e0       	ldi	r25, 0x00	; 0
 c94:	fc 01       	movw	r30, r24
 c96:	80 81       	ld	r24, Z

}/* i2c_readNak */
 c98:	df 91       	pop	r29
 c9a:	cf 91       	pop	r28
 c9c:	08 95       	ret

00000c9e <to_bcd>:

uint8_t to_bcd(uint8_t in) {
 c9e:	cf 93       	push	r28
 ca0:	df 93       	push	r29
 ca2:	1f 92       	push	r1
 ca4:	cd b7       	in	r28, 0x3d	; 61
 ca6:	de b7       	in	r29, 0x3e	; 62
 ca8:	89 83       	std	Y+1, r24	; 0x01
	return (in % 10) | ((in / 10) << 4);
 caa:	99 81       	ldd	r25, Y+1	; 0x01
 cac:	8d ec       	ldi	r24, 0xCD	; 205
 cae:	98 9f       	mul	r25, r24
 cb0:	81 2d       	mov	r24, r1
 cb2:	11 24       	eor	r1, r1
 cb4:	86 95       	lsr	r24
 cb6:	86 95       	lsr	r24
 cb8:	86 95       	lsr	r24
 cba:	88 0f       	add	r24, r24
 cbc:	28 2f       	mov	r18, r24
 cbe:	22 0f       	add	r18, r18
 cc0:	22 0f       	add	r18, r18
 cc2:	82 0f       	add	r24, r18
 cc4:	29 2f       	mov	r18, r25
 cc6:	28 1b       	sub	r18, r24
 cc8:	82 2f       	mov	r24, r18
 cca:	28 2f       	mov	r18, r24
 ccc:	99 81       	ldd	r25, Y+1	; 0x01
 cce:	8d ec       	ldi	r24, 0xCD	; 205
 cd0:	98 9f       	mul	r25, r24
 cd2:	81 2d       	mov	r24, r1
 cd4:	11 24       	eor	r1, r1
 cd6:	86 95       	lsr	r24
 cd8:	86 95       	lsr	r24
 cda:	86 95       	lsr	r24
 cdc:	88 2f       	mov	r24, r24
 cde:	90 e0       	ldi	r25, 0x00	; 0
 ce0:	82 95       	swap	r24
 ce2:	92 95       	swap	r25
 ce4:	90 7f       	andi	r25, 0xF0	; 240
 ce6:	98 27       	eor	r25, r24
 ce8:	80 7f       	andi	r24, 0xF0	; 240
 cea:	98 27       	eor	r25, r24
 cec:	82 2b       	or	r24, r18
}
 cee:	0f 90       	pop	r0
 cf0:	df 91       	pop	r29
 cf2:	cf 91       	pop	r28
 cf4:	08 95       	ret

00000cf6 <from_bcd>:

uint8_t from_bcd(uint8_t in) {
 cf6:	cf 93       	push	r28
 cf8:	df 93       	push	r29
 cfa:	1f 92       	push	r1
 cfc:	cd b7       	in	r28, 0x3d	; 61
 cfe:	de b7       	in	r29, 0x3e	; 62
 d00:	89 83       	std	Y+1, r24	; 0x01
	return (in & 0x0F) + 10 * (in >> 4);
 d02:	89 81       	ldd	r24, Y+1	; 0x01
 d04:	98 2f       	mov	r25, r24
 d06:	9f 70       	andi	r25, 0x0F	; 15
 d08:	89 81       	ldd	r24, Y+1	; 0x01
 d0a:	82 95       	swap	r24
 d0c:	8f 70       	andi	r24, 0x0F	; 15
 d0e:	88 0f       	add	r24, r24
 d10:	28 2f       	mov	r18, r24
 d12:	22 0f       	add	r18, r18
 d14:	22 0f       	add	r18, r18
 d16:	82 0f       	add	r24, r18
 d18:	89 0f       	add	r24, r25
}
 d1a:	0f 90       	pop	r0
 d1c:	df 91       	pop	r29
 d1e:	cf 91       	pop	r28
 d20:	08 95       	ret

00000d22 <__tablejump2__>:
 d22:	ee 0f       	add	r30, r30
 d24:	ff 1f       	adc	r31, r31
 d26:	05 90       	lpm	r0, Z+
 d28:	f4 91       	lpm	r31, Z
 d2a:	e0 2d       	mov	r30, r0
 d2c:	09 94       	ijmp

00000d2e <atoi>:
 d2e:	fc 01       	movw	r30, r24
 d30:	88 27       	eor	r24, r24
 d32:	99 27       	eor	r25, r25
 d34:	e8 94       	clt
 d36:	21 91       	ld	r18, Z+
 d38:	20 32       	cpi	r18, 0x20	; 32
 d3a:	e9 f3       	breq	.-6      	; 0xd36 <atoi+0x8>
 d3c:	29 30       	cpi	r18, 0x09	; 9
 d3e:	10 f0       	brcs	.+4      	; 0xd44 <atoi+0x16>
 d40:	2e 30       	cpi	r18, 0x0E	; 14
 d42:	c8 f3       	brcs	.-14     	; 0xd36 <atoi+0x8>
 d44:	2b 32       	cpi	r18, 0x2B	; 43
 d46:	41 f0       	breq	.+16     	; 0xd58 <atoi+0x2a>
 d48:	2d 32       	cpi	r18, 0x2D	; 45
 d4a:	39 f4       	brne	.+14     	; 0xd5a <atoi+0x2c>
 d4c:	68 94       	set
 d4e:	04 c0       	rjmp	.+8      	; 0xd58 <atoi+0x2a>
 d50:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__mulhi_const_10>
 d54:	82 0f       	add	r24, r18
 d56:	91 1d       	adc	r25, r1
 d58:	21 91       	ld	r18, Z+
 d5a:	20 53       	subi	r18, 0x30	; 48
 d5c:	2a 30       	cpi	r18, 0x0A	; 10
 d5e:	c0 f3       	brcs	.-16     	; 0xd50 <atoi+0x22>
 d60:	1e f4       	brtc	.+6      	; 0xd68 <atoi+0x3a>
 d62:	90 95       	com	r25
 d64:	81 95       	neg	r24
 d66:	9f 4f       	sbci	r25, 0xFF	; 255
 d68:	08 95       	ret

00000d6a <__mulhi_const_10>:
 d6a:	7a e0       	ldi	r23, 0x0A	; 10
 d6c:	97 9f       	mul	r25, r23
 d6e:	90 2d       	mov	r25, r0
 d70:	87 9f       	mul	r24, r23
 d72:	80 2d       	mov	r24, r0
 d74:	91 0d       	add	r25, r1
 d76:	11 24       	eor	r1, r1
 d78:	08 95       	ret

00000d7a <__divmodhi4>:
 d7a:	97 fb       	bst	r25, 7
 d7c:	07 2e       	mov	r0, r23
 d7e:	16 f4       	brtc	.+4      	; 0xd84 <__divmodhi4+0xa>
 d80:	00 94       	com	r0
 d82:	07 d0       	rcall	.+14     	; 0xd92 <__divmodhi4_neg1>
 d84:	77 fd       	sbrc	r23, 7
 d86:	09 d0       	rcall	.+18     	; 0xd9a <__divmodhi4_neg2>
 d88:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <__udivmodhi4>
 d8c:	07 fc       	sbrc	r0, 7
 d8e:	05 d0       	rcall	.+10     	; 0xd9a <__divmodhi4_neg2>
 d90:	3e f4       	brtc	.+14     	; 0xda0 <__divmodhi4_exit>

00000d92 <__divmodhi4_neg1>:
 d92:	90 95       	com	r25
 d94:	81 95       	neg	r24
 d96:	9f 4f       	sbci	r25, 0xFF	; 255
 d98:	08 95       	ret

00000d9a <__divmodhi4_neg2>:
 d9a:	70 95       	com	r23
 d9c:	61 95       	neg	r22
 d9e:	7f 4f       	sbci	r23, 0xFF	; 255

00000da0 <__divmodhi4_exit>:
 da0:	08 95       	ret

00000da2 <__epilogue_restores__>:
 da2:	2a 88       	ldd	r2, Y+18	; 0x12
 da4:	39 88       	ldd	r3, Y+17	; 0x11
 da6:	48 88       	ldd	r4, Y+16	; 0x10
 da8:	5f 84       	ldd	r5, Y+15	; 0x0f
 daa:	6e 84       	ldd	r6, Y+14	; 0x0e
 dac:	7d 84       	ldd	r7, Y+13	; 0x0d
 dae:	8c 84       	ldd	r8, Y+12	; 0x0c
 db0:	9b 84       	ldd	r9, Y+11	; 0x0b
 db2:	aa 84       	ldd	r10, Y+10	; 0x0a
 db4:	b9 84       	ldd	r11, Y+9	; 0x09
 db6:	c8 84       	ldd	r12, Y+8	; 0x08
 db8:	df 80       	ldd	r13, Y+7	; 0x07
 dba:	ee 80       	ldd	r14, Y+6	; 0x06
 dbc:	fd 80       	ldd	r15, Y+5	; 0x05
 dbe:	0c 81       	ldd	r16, Y+4	; 0x04
 dc0:	1b 81       	ldd	r17, Y+3	; 0x03
 dc2:	aa 81       	ldd	r26, Y+2	; 0x02
 dc4:	b9 81       	ldd	r27, Y+1	; 0x01
 dc6:	ce 0f       	add	r28, r30
 dc8:	d1 1d       	adc	r29, r1
 dca:	0f b6       	in	r0, 0x3f	; 63
 dcc:	f8 94       	cli
 dce:	de bf       	out	0x3e, r29	; 62
 dd0:	0f be       	out	0x3f, r0	; 63
 dd2:	cd bf       	out	0x3d, r28	; 61
 dd4:	ed 01       	movw	r28, r26
 dd6:	08 95       	ret

00000dd8 <__udivmodhi4>:
 dd8:	aa 1b       	sub	r26, r26
 dda:	bb 1b       	sub	r27, r27
 ddc:	51 e1       	ldi	r21, 0x11	; 17
 dde:	07 c0       	rjmp	.+14     	; 0xdee <__udivmodhi4_ep>

00000de0 <__udivmodhi4_loop>:
 de0:	aa 1f       	adc	r26, r26
 de2:	bb 1f       	adc	r27, r27
 de4:	a6 17       	cp	r26, r22
 de6:	b7 07       	cpc	r27, r23
 de8:	10 f0       	brcs	.+4      	; 0xdee <__udivmodhi4_ep>
 dea:	a6 1b       	sub	r26, r22
 dec:	b7 0b       	sbc	r27, r23

00000dee <__udivmodhi4_ep>:
 dee:	88 1f       	adc	r24, r24
 df0:	99 1f       	adc	r25, r25
 df2:	5a 95       	dec	r21
 df4:	a9 f7       	brne	.-22     	; 0xde0 <__udivmodhi4_loop>
 df6:	80 95       	com	r24
 df8:	90 95       	com	r25
 dfa:	bc 01       	movw	r22, r24
 dfc:	cd 01       	movw	r24, r26
 dfe:	08 95       	ret

00000e00 <_exit>:
 e00:	f8 94       	cli

00000e02 <__stop_program>:
 e02:	ff cf       	rjmp	.-2      	; 0xe02 <__stop_program>
