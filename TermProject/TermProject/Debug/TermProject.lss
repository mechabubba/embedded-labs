
TermProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800100  00000a92  00000b26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a92  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000050  00800144  00800144  00000b6a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b6a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bc8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000c08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001066  00000000  00000000  00000ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000889  00000000  00000000  00001d4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008a9  00000000  00000000  000025d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001ec  00000000  00000000  00002e80  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000565  00000000  00000000  0000306c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000534  00000000  00000000  000035d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00003b05  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e9       	ldi	r30, 0x92	; 146
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 34       	cpi	r26, 0x44	; 68
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e4       	ldi	r26, 0x44	; 68
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 39       	cpi	r26, 0x94	; 148
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 94 01 	call	0x328	; 0x328 <main>
  9e:	0c 94 47 05 	jmp	0xa8e	; 0xa8e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_18>:
	if (acc > 127) {
		usart_prints("push\r\n");
		return 1;
	}
	else return 0;
}
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
  b2:	ef 93       	push	r30
  b4:	ff 93       	push	r31
  b6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  ba:	e0 91 46 01 	lds	r30, 0x0146	; 0x800146 <rx_buffer_head>
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	e4 5b       	subi	r30, 0xB4	; 180
  c2:	fe 4f       	sbci	r31, 0xFE	; 254
  c4:	80 83       	st	Z, r24
  c6:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <rx_buffer_head>
  ca:	8f 33       	cpi	r24, 0x3F	; 63
  cc:	19 f4       	brne	.+6      	; 0xd4 <__vector_18+0x2e>
  ce:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <rx_buffer_head>
  d2:	05 c0       	rjmp	.+10     	; 0xde <__vector_18+0x38>
  d4:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <rx_buffer_head>
  d8:	8f 5f       	subi	r24, 0xFF	; 255
  da:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <rx_buffer_head>
  de:	ff 91       	pop	r31
  e0:	ef 91       	pop	r30
  e2:	8f 91       	pop	r24
  e4:	0f 90       	pop	r0
  e6:	0f be       	out	0x3f, r0	; 63
  e8:	0f 90       	pop	r0
  ea:	1f 90       	pop	r1
  ec:	18 95       	reti

000000ee <usart_clear>:
  ee:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <rx_buffer_head>
  f2:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <rx_buffer_tail>
  f6:	08 95       	ret

000000f8 <usart_init>:
  f8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  fc:	87 e6       	ldi	r24, 0x67	; 103
  fe:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 102:	88 e9       	ldi	r24, 0x98	; 152
 104:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 108:	86 e0       	ldi	r24, 0x06	; 6
 10a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 10e:	8a b1       	in	r24, 0x0a	; 10
 110:	82 60       	ori	r24, 0x02	; 2
 112:	8a b9       	out	0x0a, r24	; 10
 114:	8a b1       	in	r24, 0x0a	; 10
 116:	8e 7f       	andi	r24, 0xFE	; 254
 118:	8a b9       	out	0x0a, r24	; 10
 11a:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <rx_buffer_head>
 11e:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <rx_buffer_tail>
 122:	08 95       	ret

00000124 <usart_putc>:
 124:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 128:	95 ff       	sbrs	r25, 5
 12a:	fc cf       	rjmp	.-8      	; 0x124 <usart_putc>
 12c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 130:	08 95       	ret

00000132 <usart_prints>:
 132:	fc 01       	movw	r30, r24
 134:	07 c0       	rjmp	.+14     	; 0x144 <usart_prints+0x12>
 136:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 13a:	95 ff       	sbrs	r25, 5
 13c:	fc cf       	rjmp	.-8      	; 0x136 <usart_prints+0x4>
 13e:	31 96       	adiw	r30, 0x01	; 1
 140:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 144:	80 81       	ld	r24, Z
 146:	81 11       	cpse	r24, r1
 148:	f6 cf       	rjmp	.-20     	; 0x136 <usart_prints+0x4>
 14a:	08 95       	ret

0000014c <usart_getc>:
 14c:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <rx_buffer_tail>
 150:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <rx_buffer_head>
 154:	98 17       	cp	r25, r24
 156:	d1 f3       	breq	.-12     	; 0x14c <usart_getc>
 158:	e0 91 47 01 	lds	r30, 0x0147	; 0x800147 <rx_buffer_tail>
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	e4 5b       	subi	r30, 0xB4	; 180
 160:	fe 4f       	sbci	r31, 0xFE	; 254
 162:	80 81       	ld	r24, Z
 164:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <rx_buffer_tail>
 168:	9f 33       	cpi	r25, 0x3F	; 63
 16a:	19 f4       	brne	.+6      	; 0x172 <usart_getc+0x26>
 16c:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <rx_buffer_tail>
 170:	08 95       	ret
 172:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <rx_buffer_tail>
 176:	9f 5f       	subi	r25, 0xFF	; 255
 178:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <rx_buffer_tail>
 17c:	08 95       	ret

0000017e <uart_buffer_empty>:
 17e:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <rx_buffer_tail>
 182:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <rx_buffer_head>
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	29 13       	cpse	r18, r25
 18a:	80 e0       	ldi	r24, 0x00	; 0
 18c:	08 95       	ret

0000018e <writeColor>:
 18e:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <cIndex>
 192:	29 2f       	mov	r18, r25
 194:	30 e0       	ldi	r19, 0x00	; 0
 196:	f9 01       	movw	r30, r18
 198:	e4 57       	subi	r30, 0x74	; 116
 19a:	fe 4f       	sbci	r31, 0xFE	; 254
 19c:	80 83       	st	Z, r24
 19e:	f9 01       	movw	r30, r18
 1a0:	e0 57       	subi	r30, 0x70	; 112
 1a2:	fe 4f       	sbci	r31, 0xFE	; 254
 1a4:	60 83       	st	Z, r22
 1a6:	f9 01       	movw	r30, r18
 1a8:	e8 5b       	subi	r30, 0xB8	; 184
 1aa:	fe 4f       	sbci	r31, 0xFE	; 254
 1ac:	40 83       	st	Z, r20
 1ae:	94 30       	cpi	r25, 0x04	; 4
 1b0:	10 f4       	brcc	.+4      	; 0x1b6 <writeColor+0x28>
 1b2:	9f 5f       	subi	r25, 0xFF	; 255
 1b4:	01 c0       	rjmp	.+2      	; 0x1b8 <writeColor+0x2a>
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <cIndex>
 1bc:	08 95       	ret

000001be <getColor>:
 1be:	1f 93       	push	r17
 1c0:	cf 93       	push	r28
 1c2:	df 93       	push	r29
 1c4:	88 e3       	ldi	r24, 0x38	; 56
 1c6:	0e 94 09 02 	call	0x412	; 0x412 <i2c_start>
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
 1d6:	0e 94 2f 02 	call	0x45e	; 0x45e <i2c_stop>
 1da:	88 e3       	ldi	r24, 0x38	; 56
 1dc:	0e 94 09 02 	call	0x412	; 0x412 <i2c_start>
 1e0:	8c e1       	ldi	r24, 0x1C	; 28
 1e2:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
 1e6:	89 e3       	ldi	r24, 0x39	; 57
 1e8:	0e 94 09 02 	call	0x412	; 0x412 <i2c_start>
 1ec:	0e 94 49 02 	call	0x492	; 0x492 <i2c_readAck>
 1f0:	0e 94 49 02 	call	0x492	; 0x492 <i2c_readAck>
 1f4:	c8 2f       	mov	r28, r24
 1f6:	0e 94 49 02 	call	0x492	; 0x492 <i2c_readAck>
 1fa:	0e 94 49 02 	call	0x492	; 0x492 <i2c_readAck>
 1fe:	d8 2f       	mov	r29, r24
 200:	0e 94 49 02 	call	0x492	; 0x492 <i2c_readAck>
 204:	0e 94 53 02 	call	0x4a6	; 0x4a6 <i2c_readNak>
 208:	18 2f       	mov	r17, r24
 20a:	88 e3       	ldi	r24, 0x38	; 56
 20c:	0e 94 09 02 	call	0x412	; 0x412 <i2c_start>
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
 21c:	0e 94 2f 02 	call	0x45e	; 0x45e <i2c_stop>
 220:	41 2f       	mov	r20, r17
 222:	6d 2f       	mov	r22, r29
 224:	8c 2f       	mov	r24, r28
 226:	0e 94 c7 00 	call	0x18e	; 0x18e <writeColor>
 22a:	df 91       	pop	r29
 22c:	cf 91       	pop	r28
 22e:	1f 91       	pop	r17
 230:	08 95       	ret

00000232 <updateLED>:
 232:	1f 93       	push	r17
 234:	cf 93       	push	r28
 236:	df 93       	push	r29
 238:	88 ee       	ldi	r24, 0xE8	; 232
 23a:	0e 94 09 02 	call	0x412	; 0x412 <i2c_start>
 23e:	82 e0       	ldi	r24, 0x02	; 2
 240:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
 24a:	10 e0       	ldi	r17, 0x00	; 0
 24c:	14 c0       	rjmp	.+40     	; 0x276 <updateLED+0x44>
 24e:	c1 2f       	mov	r28, r17
 250:	d0 e0       	ldi	r29, 0x00	; 0
 252:	fe 01       	movw	r30, r28
 254:	e4 57       	subi	r30, 0x74	; 116
 256:	fe 4f       	sbci	r31, 0xFE	; 254
 258:	80 81       	ld	r24, Z
 25a:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
 25e:	fe 01       	movw	r30, r28
 260:	e0 57       	subi	r30, 0x70	; 112
 262:	fe 4f       	sbci	r31, 0xFE	; 254
 264:	80 81       	ld	r24, Z
 266:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
 26a:	c8 5b       	subi	r28, 0xB8	; 184
 26c:	de 4f       	sbci	r29, 0xFE	; 254
 26e:	88 81       	ld	r24, Y
 270:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
 274:	1f 5f       	subi	r17, 0xFF	; 255
 276:	14 30       	cpi	r17, 0x04	; 4
 278:	50 f3       	brcs	.-44     	; 0x24e <updateLED+0x1c>
 27a:	0e 94 2f 02 	call	0x45e	; 0x45e <i2c_stop>
 27e:	88 ee       	ldi	r24, 0xE8	; 232
 280:	0e 94 09 02 	call	0x412	; 0x412 <i2c_start>
 284:	82 e0       	ldi	r24, 0x02	; 2
 286:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
 28a:	80 e8       	ldi	r24, 0x80	; 128
 28c:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
 290:	0e 94 2f 02 	call	0x45e	; 0x45e <i2c_stop>
 294:	df 91       	pop	r29
 296:	cf 91       	pop	r28
 298:	1f 91       	pop	r17
 29a:	08 95       	ret

0000029c <printColor>:

void printColor(uint8_t index) {
 29c:	0f 93       	push	r16
 29e:	1f 93       	push	r17
 2a0:	cf 93       	push	r28
 2a2:	df 93       	push	r29
 2a4:	cd b7       	in	r28, 0x3d	; 61
 2a6:	de b7       	in	r29, 0x3e	; 62
 2a8:	a0 97       	sbiw	r28, 0x20	; 32
 2aa:	0f b6       	in	r0, 0x3f	; 63
 2ac:	f8 94       	cli
 2ae:	de bf       	out	0x3e, r29	; 62
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	cd bf       	out	0x3d, r28	; 61
 2b4:	18 2f       	mov	r17, r24
	char chBuffer[32]; //Just making sure the buffer will have enough space. 
	//Including the null character, this should only be 25 chars, but it could theoretically go up to 27.
	usart_prints("");
 2b6:	83 e4       	ldi	r24, 0x43	; 67
 2b8:	91 e0       	ldi	r25, 0x01	; 1
 2ba:	0e 94 99 00 	call	0x132	; 0x132 <usart_prints>
	sprintf(chBuffer,"Color %i: %i, %i, %i\r\n",index + 1, redVals[index], greenVals[index], blueVals[index]);
 2be:	81 2f       	mov	r24, r17
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	fc 01       	movw	r30, r24
 2c4:	e8 5b       	subi	r30, 0xB8	; 184
 2c6:	fe 4f       	sbci	r31, 0xFE	; 254
 2c8:	40 81       	ld	r20, Z
 2ca:	fc 01       	movw	r30, r24
 2cc:	e0 57       	subi	r30, 0x70	; 112
 2ce:	fe 4f       	sbci	r31, 0xFE	; 254
 2d0:	30 81       	ld	r19, Z
 2d2:	fc 01       	movw	r30, r24
 2d4:	e4 57       	subi	r30, 0x74	; 116
 2d6:	fe 4f       	sbci	r31, 0xFE	; 254
 2d8:	20 81       	ld	r18, Z
 2da:	1f 92       	push	r1
 2dc:	4f 93       	push	r20
 2de:	1f 92       	push	r1
 2e0:	3f 93       	push	r19
 2e2:	1f 92       	push	r1
 2e4:	2f 93       	push	r18
 2e6:	01 96       	adiw	r24, 0x01	; 1
 2e8:	9f 93       	push	r25
 2ea:	8f 93       	push	r24
 2ec:	87 e0       	ldi	r24, 0x07	; 7
 2ee:	91 e0       	ldi	r25, 0x01	; 1
 2f0:	9f 93       	push	r25
 2f2:	8f 93       	push	r24
 2f4:	8e 01       	movw	r16, r28
 2f6:	0f 5f       	subi	r16, 0xFF	; 255
 2f8:	1f 4f       	sbci	r17, 0xFF	; 255
 2fa:	1f 93       	push	r17
 2fc:	0f 93       	push	r16
 2fe:	0e 94 5d 02 	call	0x4ba	; 0x4ba <sprintf>
	usart_prints(chBuffer);
 302:	c8 01       	movw	r24, r16
 304:	0e 94 99 00 	call	0x132	; 0x132 <usart_prints>
 308:	0f b6       	in	r0, 0x3f	; 63
 30a:	f8 94       	cli
 30c:	de bf       	out	0x3e, r29	; 62
 30e:	0f be       	out	0x3f, r0	; 63
 310:	cd bf       	out	0x3d, r28	; 61
 312:	a0 96       	adiw	r28, 0x20	; 32
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	f8 94       	cli
 318:	de bf       	out	0x3e, r29	; 62
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	cd bf       	out	0x3d, r28	; 61
 31e:	df 91       	pop	r29
 320:	cf 91       	pop	r28
 322:	1f 91       	pop	r17
 324:	0f 91       	pop	r16
 326:	08 95       	ret

00000328 <main>:
uint8_t checkButton(void);

int main(void)
{
	//Initialization:
	usart_init();
 328:	0e 94 7c 00 	call	0xf8	; 0xf8 <usart_init>
	for (uint8_t i = 0; i < 4; i++) writeColor(0, 0, 0); //Clear the color buffer so the LEDs don't display incorrect data.
 32c:	c0 e0       	ldi	r28, 0x00	; 0
 32e:	06 c0       	rjmp	.+12     	; 0x33c <main+0x14>
 330:	40 e0       	ldi	r20, 0x00	; 0
 332:	60 e0       	ldi	r22, 0x00	; 0
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	0e 94 c7 00 	call	0x18e	; 0x18e <writeColor>
 33a:	cf 5f       	subi	r28, 0xFF	; 255
 33c:	c4 30       	cpi	r28, 0x04	; 4
 33e:	c0 f3       	brcs	.-16     	; 0x330 <main+0x8>
	DDRC |= (1 << PINC0); // button
 340:	87 b1       	in	r24, 0x07	; 7
 342:	81 60       	ori	r24, 0x01	; 1
 344:	87 b9       	out	0x07, r24	; 7
	sei();
 346:	78 94       	sei
	
	usart_prints("test message\r\n");
 348:	8e e1       	ldi	r24, 0x1E	; 30
 34a:	91 e0       	ldi	r25, 0x01	; 1
 34c:	0e 94 99 00 	call	0x132	; 0x132 <usart_prints>
	
	i2c_start(SENSOR_ADDR+I2C_WRITE);
 350:	88 e3       	ldi	r24, 0x38	; 56
 352:	0e 94 09 02 	call	0x412	; 0x412 <i2c_start>
	i2c_write(0x00);
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
	i2c_write(0x01); //Tell the color sensor to turn on.
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
	i2c_stop();
 362:	0e 94 2f 02 	call	0x45e	; 0x45e <i2c_stop>
	
	i2c_start(LED_ADDR+I2C_WRITE);
 366:	88 ee       	ldi	r24, 0xE8	; 232
 368:	0e 94 09 02 	call	0x412	; 0x412 <i2c_start>
	i2c_write(0x02);
 36c:	82 e0       	ldi	r24, 0x02	; 2
 36e:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
	i2c_write(0x80); //Turn the LED on. IDK if this will fix it, probably not but what can I do
 372:	80 e8       	ldi	r24, 0x80	; 128
 374:	0e 94 37 02 	call	0x46e	; 0x46e <i2c_write>
	i2c_stop();
 378:	0e 94 2f 02 	call	0x45e	; 0x45e <i2c_stop>

	//Main loop:
	char c; //Input character
    while (1) {
		//buttonState = (0x03 & (buttonState << 1)) | checkButton();
		if (!uart_buffer_empty() || 1) {
 37c:	0e 94 bf 00 	call	0x17e	; 0x17e <uart_buffer_empty>
			c = usart_getc();
 380:	0e 94 a6 00 	call	0x14c	; 0x14c <usart_getc>
 384:	c8 2f       	mov	r28, r24
			switch (c) {
 386:	82 35       	cpi	r24, 0x52	; 82
 388:	d1 f0       	breq	.+52     	; 0x3be <main+0x96>
 38a:	28 f4       	brcc	.+10     	; 0x396 <main+0x6e>
 38c:	83 34       	cpi	r24, 0x43	; 67
 38e:	39 f1       	breq	.+78     	; 0x3de <main+0xb6>
 390:	87 34       	cpi	r24, 0x47	; 71
 392:	e9 f0       	breq	.+58     	; 0x3ce <main+0xa6>
 394:	06 c0       	rjmp	.+12     	; 0x3a2 <main+0x7a>
 396:	87 36       	cpi	r24, 0x67	; 103
 398:	d1 f0       	breq	.+52     	; 0x3ce <main+0xa6>
 39a:	82 37       	cpi	r24, 0x72	; 114
 39c:	81 f0       	breq	.+32     	; 0x3be <main+0x96>
 39e:	83 36       	cpi	r24, 0x63	; 99
 3a0:	f1 f0       	breq	.+60     	; 0x3de <main+0xb6>
			default:
				usart_prints("Echo ");
 3a2:	8d e2       	ldi	r24, 0x2D	; 45
 3a4:	91 e0       	ldi	r25, 0x01	; 1
 3a6:	0e 94 99 00 	call	0x132	; 0x132 <usart_prints>
				usart_putc(c);
 3aa:	8c 2f       	mov	r24, r28
 3ac:	0e 94 92 00 	call	0x124	; 0x124 <usart_putc>
				usart_prints("\r\n");
 3b0:	81 e4       	ldi	r24, 0x41	; 65
 3b2:	91 e0       	ldi	r25, 0x01	; 1
 3b4:	0e 94 99 00 	call	0x132	; 0x132 <usart_prints>
				usart_clear();
 3b8:	0e 94 77 00 	call	0xee	; 0xee <usart_clear>
				break;
 3bc:	1c c0       	rjmp	.+56     	; 0x3f6 <main+0xce>
			case 'r':
			case 'R':
				writeColor(255,0,0);
 3be:	40 e0       	ldi	r20, 0x00	; 0
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	8f ef       	ldi	r24, 0xFF	; 255
 3c4:	0e 94 c7 00 	call	0x18e	; 0x18e <writeColor>
				updateLED();
 3c8:	0e 94 19 01 	call	0x232	; 0x232 <updateLED>
				break;
 3cc:	14 c0       	rjmp	.+40     	; 0x3f6 <main+0xce>
			case 'g':
			case 'G':
				writeColor(0,255,0);
 3ce:	40 e0       	ldi	r20, 0x00	; 0
 3d0:	6f ef       	ldi	r22, 0xFF	; 255
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	0e 94 c7 00 	call	0x18e	; 0x18e <writeColor>
				updateLED();
 3d8:	0e 94 19 01 	call	0x232	; 0x232 <updateLED>
				break;
 3dc:	0c c0       	rjmp	.+24     	; 0x3f6 <main+0xce>
			case 'c':
			case 'C':
				printColor(0);
 3de:	80 e0       	ldi	r24, 0x00	; 0
 3e0:	0e 94 4e 01 	call	0x29c	; 0x29c <printColor>
				printColor(1);
 3e4:	81 e0       	ldi	r24, 0x01	; 1
 3e6:	0e 94 4e 01 	call	0x29c	; 0x29c <printColor>
				printColor(2);
 3ea:	82 e0       	ldi	r24, 0x02	; 2
 3ec:	0e 94 4e 01 	call	0x29c	; 0x29c <printColor>
				printColor(3);
 3f0:	83 e0       	ldi	r24, 0x03	; 3
 3f2:	0e 94 4e 01 	call	0x29c	; 0x29c <printColor>
				break;
			}
			
		}
		if (buttonState == 0x01) {
 3f6:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
 3fa:	81 30       	cpi	r24, 0x01	; 1
 3fc:	09 f0       	breq	.+2      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fe:	be cf       	rjmp	.-132    	; 0x37c <main+0x54>
			usart_prints("\tPush Detected\r\n");
 400:	83 e3       	ldi	r24, 0x33	; 51
 402:	91 e0       	ldi	r25, 0x01	; 1
 404:	0e 94 99 00 	call	0x132	; 0x132 <usart_prints>
			getColor();
 408:	0e 94 df 00 	call	0x1be	; 0x1be <getColor>
			updateLED();
 40c:	0e 94 19 01 	call	0x232	; 0x232 <updateLED>
 410:	b5 cf       	rjmp	.-150    	; 0x37c <main+0x54>

00000412 <i2c_start>:
 412:	94 ea       	ldi	r25, 0xA4	; 164
 414:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 418:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 41c:	99 23       	and	r25, r25
 41e:	e4 f7       	brge	.-8      	; 0x418 <i2c_start+0x6>
 420:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 424:	98 7f       	andi	r25, 0xF8	; 248
 426:	98 30       	cpi	r25, 0x08	; 8
 428:	11 f0       	breq	.+4      	; 0x42e <i2c_start+0x1c>
 42a:	90 31       	cpi	r25, 0x10	; 16
 42c:	91 f4       	brne	.+36     	; 0x452 <i2c_start+0x40>
 42e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 432:	84 e8       	ldi	r24, 0x84	; 132
 434:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 438:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 43c:	88 23       	and	r24, r24
 43e:	e4 f7       	brge	.-8      	; 0x438 <i2c_start+0x26>
 440:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 444:	88 7f       	andi	r24, 0xF8	; 248
 446:	88 31       	cpi	r24, 0x18	; 24
 448:	31 f0       	breq	.+12     	; 0x456 <i2c_start+0x44>
 44a:	80 34       	cpi	r24, 0x40	; 64
 44c:	31 f4       	brne	.+12     	; 0x45a <i2c_start+0x48>
 44e:	80 e0       	ldi	r24, 0x00	; 0
 450:	08 95       	ret
 452:	81 e0       	ldi	r24, 0x01	; 1
 454:	08 95       	ret
 456:	80 e0       	ldi	r24, 0x00	; 0
 458:	08 95       	ret
 45a:	81 e0       	ldi	r24, 0x01	; 1
 45c:	08 95       	ret

0000045e <i2c_stop>:
 45e:	84 e9       	ldi	r24, 0x94	; 148
 460:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 464:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 468:	84 fd       	sbrc	r24, 4
 46a:	fc cf       	rjmp	.-8      	; 0x464 <i2c_stop+0x6>
 46c:	08 95       	ret

0000046e <i2c_write>:
 46e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 472:	84 e8       	ldi	r24, 0x84	; 132
 474:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 478:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 47c:	88 23       	and	r24, r24
 47e:	e4 f7       	brge	.-8      	; 0x478 <i2c_write+0xa>
 480:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 484:	88 7f       	andi	r24, 0xF8	; 248
 486:	88 32       	cpi	r24, 0x28	; 40
 488:	11 f0       	breq	.+4      	; 0x48e <i2c_write+0x20>
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	08 95       	ret
 48e:	80 e0       	ldi	r24, 0x00	; 0
 490:	08 95       	ret

00000492 <i2c_readAck>:
 492:	84 ec       	ldi	r24, 0xC4	; 196
 494:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 498:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 49c:	88 23       	and	r24, r24
 49e:	e4 f7       	brge	.-8      	; 0x498 <i2c_readAck+0x6>
 4a0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 4a4:	08 95       	ret

000004a6 <i2c_readNak>:
 4a6:	84 e8       	ldi	r24, 0x84	; 132
 4a8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 4ac:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 4b0:	88 23       	and	r24, r24
 4b2:	e4 f7       	brge	.-8      	; 0x4ac <i2c_readNak+0x6>
 4b4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 4b8:	08 95       	ret

000004ba <sprintf>:
 4ba:	ae e0       	ldi	r26, 0x0E	; 14
 4bc:	b0 e0       	ldi	r27, 0x00	; 0
 4be:	e3 e6       	ldi	r30, 0x63	; 99
 4c0:	f2 e0       	ldi	r31, 0x02	; 2
 4c2:	0c 94 1e 05 	jmp	0xa3c	; 0xa3c <__prologue_saves__+0x1c>
 4c6:	0d 89       	ldd	r16, Y+21	; 0x15
 4c8:	1e 89       	ldd	r17, Y+22	; 0x16
 4ca:	86 e0       	ldi	r24, 0x06	; 6
 4cc:	8c 83       	std	Y+4, r24	; 0x04
 4ce:	1a 83       	std	Y+2, r17	; 0x02
 4d0:	09 83       	std	Y+1, r16	; 0x01
 4d2:	8f ef       	ldi	r24, 0xFF	; 255
 4d4:	9f e7       	ldi	r25, 0x7F	; 127
 4d6:	9e 83       	std	Y+6, r25	; 0x06
 4d8:	8d 83       	std	Y+5, r24	; 0x05
 4da:	ae 01       	movw	r20, r28
 4dc:	47 5e       	subi	r20, 0xE7	; 231
 4de:	5f 4f       	sbci	r21, 0xFF	; 255
 4e0:	6f 89       	ldd	r22, Y+23	; 0x17
 4e2:	78 8d       	ldd	r23, Y+24	; 0x18
 4e4:	ce 01       	movw	r24, r28
 4e6:	01 96       	adiw	r24, 0x01	; 1
 4e8:	0e 94 7f 02 	call	0x4fe	; 0x4fe <vfprintf>
 4ec:	ef 81       	ldd	r30, Y+7	; 0x07
 4ee:	f8 85       	ldd	r31, Y+8	; 0x08
 4f0:	e0 0f       	add	r30, r16
 4f2:	f1 1f       	adc	r31, r17
 4f4:	10 82       	st	Z, r1
 4f6:	2e 96       	adiw	r28, 0x0e	; 14
 4f8:	e4 e0       	ldi	r30, 0x04	; 4
 4fa:	0c 94 3a 05 	jmp	0xa74	; 0xa74 <__epilogue_restores__+0x1c>

000004fe <vfprintf>:
 4fe:	ab e0       	ldi	r26, 0x0B	; 11
 500:	b0 e0       	ldi	r27, 0x00	; 0
 502:	e5 e8       	ldi	r30, 0x85	; 133
 504:	f2 e0       	ldi	r31, 0x02	; 2
 506:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__prologue_saves__>
 50a:	6c 01       	movw	r12, r24
 50c:	7b 01       	movw	r14, r22
 50e:	8a 01       	movw	r16, r20
 510:	fc 01       	movw	r30, r24
 512:	17 82       	std	Z+7, r1	; 0x07
 514:	16 82       	std	Z+6, r1	; 0x06
 516:	83 81       	ldd	r24, Z+3	; 0x03
 518:	81 ff       	sbrs	r24, 1
 51a:	cc c1       	rjmp	.+920    	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
 51c:	ce 01       	movw	r24, r28
 51e:	01 96       	adiw	r24, 0x01	; 1
 520:	3c 01       	movw	r6, r24
 522:	f6 01       	movw	r30, r12
 524:	93 81       	ldd	r25, Z+3	; 0x03
 526:	f7 01       	movw	r30, r14
 528:	93 fd       	sbrc	r25, 3
 52a:	85 91       	lpm	r24, Z+
 52c:	93 ff       	sbrs	r25, 3
 52e:	81 91       	ld	r24, Z+
 530:	7f 01       	movw	r14, r30
 532:	88 23       	and	r24, r24
 534:	09 f4       	brne	.+2      	; 0x538 <vfprintf+0x3a>
 536:	ba c1       	rjmp	.+884    	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 538:	85 32       	cpi	r24, 0x25	; 37
 53a:	39 f4       	brne	.+14     	; 0x54a <vfprintf+0x4c>
 53c:	93 fd       	sbrc	r25, 3
 53e:	85 91       	lpm	r24, Z+
 540:	93 ff       	sbrs	r25, 3
 542:	81 91       	ld	r24, Z+
 544:	7f 01       	movw	r14, r30
 546:	85 32       	cpi	r24, 0x25	; 37
 548:	29 f4       	brne	.+10     	; 0x554 <vfprintf+0x56>
 54a:	b6 01       	movw	r22, r12
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 552:	e7 cf       	rjmp	.-50     	; 0x522 <vfprintf+0x24>
 554:	91 2c       	mov	r9, r1
 556:	21 2c       	mov	r2, r1
 558:	31 2c       	mov	r3, r1
 55a:	ff e1       	ldi	r31, 0x1F	; 31
 55c:	f3 15       	cp	r31, r3
 55e:	d8 f0       	brcs	.+54     	; 0x596 <vfprintf+0x98>
 560:	8b 32       	cpi	r24, 0x2B	; 43
 562:	79 f0       	breq	.+30     	; 0x582 <vfprintf+0x84>
 564:	38 f4       	brcc	.+14     	; 0x574 <vfprintf+0x76>
 566:	80 32       	cpi	r24, 0x20	; 32
 568:	79 f0       	breq	.+30     	; 0x588 <vfprintf+0x8a>
 56a:	83 32       	cpi	r24, 0x23	; 35
 56c:	a1 f4       	brne	.+40     	; 0x596 <vfprintf+0x98>
 56e:	23 2d       	mov	r18, r3
 570:	20 61       	ori	r18, 0x10	; 16
 572:	1d c0       	rjmp	.+58     	; 0x5ae <vfprintf+0xb0>
 574:	8d 32       	cpi	r24, 0x2D	; 45
 576:	61 f0       	breq	.+24     	; 0x590 <vfprintf+0x92>
 578:	80 33       	cpi	r24, 0x30	; 48
 57a:	69 f4       	brne	.+26     	; 0x596 <vfprintf+0x98>
 57c:	23 2d       	mov	r18, r3
 57e:	21 60       	ori	r18, 0x01	; 1
 580:	16 c0       	rjmp	.+44     	; 0x5ae <vfprintf+0xb0>
 582:	83 2d       	mov	r24, r3
 584:	82 60       	ori	r24, 0x02	; 2
 586:	38 2e       	mov	r3, r24
 588:	e3 2d       	mov	r30, r3
 58a:	e4 60       	ori	r30, 0x04	; 4
 58c:	3e 2e       	mov	r3, r30
 58e:	2a c0       	rjmp	.+84     	; 0x5e4 <vfprintf+0xe6>
 590:	f3 2d       	mov	r31, r3
 592:	f8 60       	ori	r31, 0x08	; 8
 594:	1d c0       	rjmp	.+58     	; 0x5d0 <vfprintf+0xd2>
 596:	37 fc       	sbrc	r3, 7
 598:	2d c0       	rjmp	.+90     	; 0x5f4 <vfprintf+0xf6>
 59a:	20 ed       	ldi	r18, 0xD0	; 208
 59c:	28 0f       	add	r18, r24
 59e:	2a 30       	cpi	r18, 0x0A	; 10
 5a0:	40 f0       	brcs	.+16     	; 0x5b2 <vfprintf+0xb4>
 5a2:	8e 32       	cpi	r24, 0x2E	; 46
 5a4:	b9 f4       	brne	.+46     	; 0x5d4 <vfprintf+0xd6>
 5a6:	36 fc       	sbrc	r3, 6
 5a8:	81 c1       	rjmp	.+770    	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 5aa:	23 2d       	mov	r18, r3
 5ac:	20 64       	ori	r18, 0x40	; 64
 5ae:	32 2e       	mov	r3, r18
 5b0:	19 c0       	rjmp	.+50     	; 0x5e4 <vfprintf+0xe6>
 5b2:	36 fe       	sbrs	r3, 6
 5b4:	06 c0       	rjmp	.+12     	; 0x5c2 <vfprintf+0xc4>
 5b6:	8a e0       	ldi	r24, 0x0A	; 10
 5b8:	98 9e       	mul	r9, r24
 5ba:	20 0d       	add	r18, r0
 5bc:	11 24       	eor	r1, r1
 5be:	92 2e       	mov	r9, r18
 5c0:	11 c0       	rjmp	.+34     	; 0x5e4 <vfprintf+0xe6>
 5c2:	ea e0       	ldi	r30, 0x0A	; 10
 5c4:	2e 9e       	mul	r2, r30
 5c6:	20 0d       	add	r18, r0
 5c8:	11 24       	eor	r1, r1
 5ca:	22 2e       	mov	r2, r18
 5cc:	f3 2d       	mov	r31, r3
 5ce:	f0 62       	ori	r31, 0x20	; 32
 5d0:	3f 2e       	mov	r3, r31
 5d2:	08 c0       	rjmp	.+16     	; 0x5e4 <vfprintf+0xe6>
 5d4:	8c 36       	cpi	r24, 0x6C	; 108
 5d6:	21 f4       	brne	.+8      	; 0x5e0 <vfprintf+0xe2>
 5d8:	83 2d       	mov	r24, r3
 5da:	80 68       	ori	r24, 0x80	; 128
 5dc:	38 2e       	mov	r3, r24
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <vfprintf+0xe6>
 5e0:	88 36       	cpi	r24, 0x68	; 104
 5e2:	41 f4       	brne	.+16     	; 0x5f4 <vfprintf+0xf6>
 5e4:	f7 01       	movw	r30, r14
 5e6:	93 fd       	sbrc	r25, 3
 5e8:	85 91       	lpm	r24, Z+
 5ea:	93 ff       	sbrs	r25, 3
 5ec:	81 91       	ld	r24, Z+
 5ee:	7f 01       	movw	r14, r30
 5f0:	81 11       	cpse	r24, r1
 5f2:	b3 cf       	rjmp	.-154    	; 0x55a <vfprintf+0x5c>
 5f4:	98 2f       	mov	r25, r24
 5f6:	9f 7d       	andi	r25, 0xDF	; 223
 5f8:	95 54       	subi	r25, 0x45	; 69
 5fa:	93 30       	cpi	r25, 0x03	; 3
 5fc:	28 f4       	brcc	.+10     	; 0x608 <vfprintf+0x10a>
 5fe:	0c 5f       	subi	r16, 0xFC	; 252
 600:	1f 4f       	sbci	r17, 0xFF	; 255
 602:	9f e3       	ldi	r25, 0x3F	; 63
 604:	99 83       	std	Y+1, r25	; 0x01
 606:	0d c0       	rjmp	.+26     	; 0x622 <vfprintf+0x124>
 608:	83 36       	cpi	r24, 0x63	; 99
 60a:	31 f0       	breq	.+12     	; 0x618 <vfprintf+0x11a>
 60c:	83 37       	cpi	r24, 0x73	; 115
 60e:	71 f0       	breq	.+28     	; 0x62c <vfprintf+0x12e>
 610:	83 35       	cpi	r24, 0x53	; 83
 612:	09 f0       	breq	.+2      	; 0x616 <vfprintf+0x118>
 614:	59 c0       	rjmp	.+178    	; 0x6c8 <vfprintf+0x1ca>
 616:	21 c0       	rjmp	.+66     	; 0x65a <vfprintf+0x15c>
 618:	f8 01       	movw	r30, r16
 61a:	80 81       	ld	r24, Z
 61c:	89 83       	std	Y+1, r24	; 0x01
 61e:	0e 5f       	subi	r16, 0xFE	; 254
 620:	1f 4f       	sbci	r17, 0xFF	; 255
 622:	88 24       	eor	r8, r8
 624:	83 94       	inc	r8
 626:	91 2c       	mov	r9, r1
 628:	53 01       	movw	r10, r6
 62a:	13 c0       	rjmp	.+38     	; 0x652 <vfprintf+0x154>
 62c:	28 01       	movw	r4, r16
 62e:	f2 e0       	ldi	r31, 0x02	; 2
 630:	4f 0e       	add	r4, r31
 632:	51 1c       	adc	r5, r1
 634:	f8 01       	movw	r30, r16
 636:	a0 80       	ld	r10, Z
 638:	b1 80       	ldd	r11, Z+1	; 0x01
 63a:	36 fe       	sbrs	r3, 6
 63c:	03 c0       	rjmp	.+6      	; 0x644 <vfprintf+0x146>
 63e:	69 2d       	mov	r22, r9
 640:	70 e0       	ldi	r23, 0x00	; 0
 642:	02 c0       	rjmp	.+4      	; 0x648 <vfprintf+0x14a>
 644:	6f ef       	ldi	r22, 0xFF	; 255
 646:	7f ef       	ldi	r23, 0xFF	; 255
 648:	c5 01       	movw	r24, r10
 64a:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <strnlen>
 64e:	4c 01       	movw	r8, r24
 650:	82 01       	movw	r16, r4
 652:	f3 2d       	mov	r31, r3
 654:	ff 77       	andi	r31, 0x7F	; 127
 656:	3f 2e       	mov	r3, r31
 658:	16 c0       	rjmp	.+44     	; 0x686 <vfprintf+0x188>
 65a:	28 01       	movw	r4, r16
 65c:	22 e0       	ldi	r18, 0x02	; 2
 65e:	42 0e       	add	r4, r18
 660:	51 1c       	adc	r5, r1
 662:	f8 01       	movw	r30, r16
 664:	a0 80       	ld	r10, Z
 666:	b1 80       	ldd	r11, Z+1	; 0x01
 668:	36 fe       	sbrs	r3, 6
 66a:	03 c0       	rjmp	.+6      	; 0x672 <vfprintf+0x174>
 66c:	69 2d       	mov	r22, r9
 66e:	70 e0       	ldi	r23, 0x00	; 0
 670:	02 c0       	rjmp	.+4      	; 0x676 <vfprintf+0x178>
 672:	6f ef       	ldi	r22, 0xFF	; 255
 674:	7f ef       	ldi	r23, 0xFF	; 255
 676:	c5 01       	movw	r24, r10
 678:	0e 94 60 04 	call	0x8c0	; 0x8c0 <strnlen_P>
 67c:	4c 01       	movw	r8, r24
 67e:	f3 2d       	mov	r31, r3
 680:	f0 68       	ori	r31, 0x80	; 128
 682:	3f 2e       	mov	r3, r31
 684:	82 01       	movw	r16, r4
 686:	33 fc       	sbrc	r3, 3
 688:	1b c0       	rjmp	.+54     	; 0x6c0 <vfprintf+0x1c2>
 68a:	82 2d       	mov	r24, r2
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	88 16       	cp	r8, r24
 690:	99 06       	cpc	r9, r25
 692:	b0 f4       	brcc	.+44     	; 0x6c0 <vfprintf+0x1c2>
 694:	b6 01       	movw	r22, r12
 696:	80 e2       	ldi	r24, 0x20	; 32
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 69e:	2a 94       	dec	r2
 6a0:	f4 cf       	rjmp	.-24     	; 0x68a <vfprintf+0x18c>
 6a2:	f5 01       	movw	r30, r10
 6a4:	37 fc       	sbrc	r3, 7
 6a6:	85 91       	lpm	r24, Z+
 6a8:	37 fe       	sbrs	r3, 7
 6aa:	81 91       	ld	r24, Z+
 6ac:	5f 01       	movw	r10, r30
 6ae:	b6 01       	movw	r22, r12
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 6b6:	21 10       	cpse	r2, r1
 6b8:	2a 94       	dec	r2
 6ba:	21 e0       	ldi	r18, 0x01	; 1
 6bc:	82 1a       	sub	r8, r18
 6be:	91 08       	sbc	r9, r1
 6c0:	81 14       	cp	r8, r1
 6c2:	91 04       	cpc	r9, r1
 6c4:	71 f7       	brne	.-36     	; 0x6a2 <vfprintf+0x1a4>
 6c6:	e8 c0       	rjmp	.+464    	; 0x898 <__DATA_REGION_LENGTH__+0x98>
 6c8:	84 36       	cpi	r24, 0x64	; 100
 6ca:	11 f0       	breq	.+4      	; 0x6d0 <vfprintf+0x1d2>
 6cc:	89 36       	cpi	r24, 0x69	; 105
 6ce:	41 f5       	brne	.+80     	; 0x720 <vfprintf+0x222>
 6d0:	f8 01       	movw	r30, r16
 6d2:	37 fe       	sbrs	r3, 7
 6d4:	07 c0       	rjmp	.+14     	; 0x6e4 <vfprintf+0x1e6>
 6d6:	60 81       	ld	r22, Z
 6d8:	71 81       	ldd	r23, Z+1	; 0x01
 6da:	82 81       	ldd	r24, Z+2	; 0x02
 6dc:	93 81       	ldd	r25, Z+3	; 0x03
 6de:	0c 5f       	subi	r16, 0xFC	; 252
 6e0:	1f 4f       	sbci	r17, 0xFF	; 255
 6e2:	08 c0       	rjmp	.+16     	; 0x6f4 <vfprintf+0x1f6>
 6e4:	60 81       	ld	r22, Z
 6e6:	71 81       	ldd	r23, Z+1	; 0x01
 6e8:	07 2e       	mov	r0, r23
 6ea:	00 0c       	add	r0, r0
 6ec:	88 0b       	sbc	r24, r24
 6ee:	99 0b       	sbc	r25, r25
 6f0:	0e 5f       	subi	r16, 0xFE	; 254
 6f2:	1f 4f       	sbci	r17, 0xFF	; 255
 6f4:	f3 2d       	mov	r31, r3
 6f6:	ff 76       	andi	r31, 0x6F	; 111
 6f8:	3f 2e       	mov	r3, r31
 6fa:	97 ff       	sbrs	r25, 7
 6fc:	09 c0       	rjmp	.+18     	; 0x710 <vfprintf+0x212>
 6fe:	90 95       	com	r25
 700:	80 95       	com	r24
 702:	70 95       	com	r23
 704:	61 95       	neg	r22
 706:	7f 4f       	sbci	r23, 0xFF	; 255
 708:	8f 4f       	sbci	r24, 0xFF	; 255
 70a:	9f 4f       	sbci	r25, 0xFF	; 255
 70c:	f0 68       	ori	r31, 0x80	; 128
 70e:	3f 2e       	mov	r3, r31
 710:	2a e0       	ldi	r18, 0x0A	; 10
 712:	30 e0       	ldi	r19, 0x00	; 0
 714:	a3 01       	movw	r20, r6
 716:	0e 94 b2 04 	call	0x964	; 0x964 <__ultoa_invert>
 71a:	88 2e       	mov	r8, r24
 71c:	86 18       	sub	r8, r6
 71e:	45 c0       	rjmp	.+138    	; 0x7aa <vfprintf+0x2ac>
 720:	85 37       	cpi	r24, 0x75	; 117
 722:	31 f4       	brne	.+12     	; 0x730 <vfprintf+0x232>
 724:	23 2d       	mov	r18, r3
 726:	2f 7e       	andi	r18, 0xEF	; 239
 728:	b2 2e       	mov	r11, r18
 72a:	2a e0       	ldi	r18, 0x0A	; 10
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	25 c0       	rjmp	.+74     	; 0x77a <vfprintf+0x27c>
 730:	93 2d       	mov	r25, r3
 732:	99 7f       	andi	r25, 0xF9	; 249
 734:	b9 2e       	mov	r11, r25
 736:	8f 36       	cpi	r24, 0x6F	; 111
 738:	c1 f0       	breq	.+48     	; 0x76a <vfprintf+0x26c>
 73a:	18 f4       	brcc	.+6      	; 0x742 <vfprintf+0x244>
 73c:	88 35       	cpi	r24, 0x58	; 88
 73e:	79 f0       	breq	.+30     	; 0x75e <vfprintf+0x260>
 740:	b5 c0       	rjmp	.+362    	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 742:	80 37       	cpi	r24, 0x70	; 112
 744:	19 f0       	breq	.+6      	; 0x74c <vfprintf+0x24e>
 746:	88 37       	cpi	r24, 0x78	; 120
 748:	21 f0       	breq	.+8      	; 0x752 <vfprintf+0x254>
 74a:	b0 c0       	rjmp	.+352    	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 74c:	e9 2f       	mov	r30, r25
 74e:	e0 61       	ori	r30, 0x10	; 16
 750:	be 2e       	mov	r11, r30
 752:	b4 fe       	sbrs	r11, 4
 754:	0d c0       	rjmp	.+26     	; 0x770 <vfprintf+0x272>
 756:	fb 2d       	mov	r31, r11
 758:	f4 60       	ori	r31, 0x04	; 4
 75a:	bf 2e       	mov	r11, r31
 75c:	09 c0       	rjmp	.+18     	; 0x770 <vfprintf+0x272>
 75e:	34 fe       	sbrs	r3, 4
 760:	0a c0       	rjmp	.+20     	; 0x776 <vfprintf+0x278>
 762:	29 2f       	mov	r18, r25
 764:	26 60       	ori	r18, 0x06	; 6
 766:	b2 2e       	mov	r11, r18
 768:	06 c0       	rjmp	.+12     	; 0x776 <vfprintf+0x278>
 76a:	28 e0       	ldi	r18, 0x08	; 8
 76c:	30 e0       	ldi	r19, 0x00	; 0
 76e:	05 c0       	rjmp	.+10     	; 0x77a <vfprintf+0x27c>
 770:	20 e1       	ldi	r18, 0x10	; 16
 772:	30 e0       	ldi	r19, 0x00	; 0
 774:	02 c0       	rjmp	.+4      	; 0x77a <vfprintf+0x27c>
 776:	20 e1       	ldi	r18, 0x10	; 16
 778:	32 e0       	ldi	r19, 0x02	; 2
 77a:	f8 01       	movw	r30, r16
 77c:	b7 fe       	sbrs	r11, 7
 77e:	07 c0       	rjmp	.+14     	; 0x78e <vfprintf+0x290>
 780:	60 81       	ld	r22, Z
 782:	71 81       	ldd	r23, Z+1	; 0x01
 784:	82 81       	ldd	r24, Z+2	; 0x02
 786:	93 81       	ldd	r25, Z+3	; 0x03
 788:	0c 5f       	subi	r16, 0xFC	; 252
 78a:	1f 4f       	sbci	r17, 0xFF	; 255
 78c:	06 c0       	rjmp	.+12     	; 0x79a <vfprintf+0x29c>
 78e:	60 81       	ld	r22, Z
 790:	71 81       	ldd	r23, Z+1	; 0x01
 792:	80 e0       	ldi	r24, 0x00	; 0
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	0e 5f       	subi	r16, 0xFE	; 254
 798:	1f 4f       	sbci	r17, 0xFF	; 255
 79a:	a3 01       	movw	r20, r6
 79c:	0e 94 b2 04 	call	0x964	; 0x964 <__ultoa_invert>
 7a0:	88 2e       	mov	r8, r24
 7a2:	86 18       	sub	r8, r6
 7a4:	fb 2d       	mov	r31, r11
 7a6:	ff 77       	andi	r31, 0x7F	; 127
 7a8:	3f 2e       	mov	r3, r31
 7aa:	36 fe       	sbrs	r3, 6
 7ac:	0d c0       	rjmp	.+26     	; 0x7c8 <vfprintf+0x2ca>
 7ae:	23 2d       	mov	r18, r3
 7b0:	2e 7f       	andi	r18, 0xFE	; 254
 7b2:	a2 2e       	mov	r10, r18
 7b4:	89 14       	cp	r8, r9
 7b6:	58 f4       	brcc	.+22     	; 0x7ce <vfprintf+0x2d0>
 7b8:	34 fe       	sbrs	r3, 4
 7ba:	0b c0       	rjmp	.+22     	; 0x7d2 <vfprintf+0x2d4>
 7bc:	32 fc       	sbrc	r3, 2
 7be:	09 c0       	rjmp	.+18     	; 0x7d2 <vfprintf+0x2d4>
 7c0:	83 2d       	mov	r24, r3
 7c2:	8e 7e       	andi	r24, 0xEE	; 238
 7c4:	a8 2e       	mov	r10, r24
 7c6:	05 c0       	rjmp	.+10     	; 0x7d2 <vfprintf+0x2d4>
 7c8:	b8 2c       	mov	r11, r8
 7ca:	a3 2c       	mov	r10, r3
 7cc:	03 c0       	rjmp	.+6      	; 0x7d4 <vfprintf+0x2d6>
 7ce:	b8 2c       	mov	r11, r8
 7d0:	01 c0       	rjmp	.+2      	; 0x7d4 <vfprintf+0x2d6>
 7d2:	b9 2c       	mov	r11, r9
 7d4:	a4 fe       	sbrs	r10, 4
 7d6:	0f c0       	rjmp	.+30     	; 0x7f6 <vfprintf+0x2f8>
 7d8:	fe 01       	movw	r30, r28
 7da:	e8 0d       	add	r30, r8
 7dc:	f1 1d       	adc	r31, r1
 7de:	80 81       	ld	r24, Z
 7e0:	80 33       	cpi	r24, 0x30	; 48
 7e2:	21 f4       	brne	.+8      	; 0x7ec <vfprintf+0x2ee>
 7e4:	9a 2d       	mov	r25, r10
 7e6:	99 7e       	andi	r25, 0xE9	; 233
 7e8:	a9 2e       	mov	r10, r25
 7ea:	09 c0       	rjmp	.+18     	; 0x7fe <vfprintf+0x300>
 7ec:	a2 fe       	sbrs	r10, 2
 7ee:	06 c0       	rjmp	.+12     	; 0x7fc <vfprintf+0x2fe>
 7f0:	b3 94       	inc	r11
 7f2:	b3 94       	inc	r11
 7f4:	04 c0       	rjmp	.+8      	; 0x7fe <vfprintf+0x300>
 7f6:	8a 2d       	mov	r24, r10
 7f8:	86 78       	andi	r24, 0x86	; 134
 7fa:	09 f0       	breq	.+2      	; 0x7fe <vfprintf+0x300>
 7fc:	b3 94       	inc	r11
 7fe:	a3 fc       	sbrc	r10, 3
 800:	11 c0       	rjmp	.+34     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 802:	a0 fe       	sbrs	r10, 0
 804:	06 c0       	rjmp	.+12     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 806:	b2 14       	cp	r11, r2
 808:	88 f4       	brcc	.+34     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
 80a:	28 0c       	add	r2, r8
 80c:	92 2c       	mov	r9, r2
 80e:	9b 18       	sub	r9, r11
 810:	0e c0       	rjmp	.+28     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 812:	b2 14       	cp	r11, r2
 814:	60 f4       	brcc	.+24     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 816:	b6 01       	movw	r22, r12
 818:	80 e2       	ldi	r24, 0x20	; 32
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 820:	b3 94       	inc	r11
 822:	f7 cf       	rjmp	.-18     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 824:	b2 14       	cp	r11, r2
 826:	18 f4       	brcc	.+6      	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 828:	2b 18       	sub	r2, r11
 82a:	02 c0       	rjmp	.+4      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 82c:	98 2c       	mov	r9, r8
 82e:	21 2c       	mov	r2, r1
 830:	a4 fe       	sbrs	r10, 4
 832:	10 c0       	rjmp	.+32     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 834:	b6 01       	movw	r22, r12
 836:	80 e3       	ldi	r24, 0x30	; 48
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 83e:	a2 fe       	sbrs	r10, 2
 840:	17 c0       	rjmp	.+46     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 842:	a1 fc       	sbrc	r10, 1
 844:	03 c0       	rjmp	.+6      	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 846:	88 e7       	ldi	r24, 0x78	; 120
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	02 c0       	rjmp	.+4      	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 84c:	88 e5       	ldi	r24, 0x58	; 88
 84e:	90 e0       	ldi	r25, 0x00	; 0
 850:	b6 01       	movw	r22, r12
 852:	0c c0       	rjmp	.+24     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
 854:	8a 2d       	mov	r24, r10
 856:	86 78       	andi	r24, 0x86	; 134
 858:	59 f0       	breq	.+22     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 85a:	a1 fe       	sbrs	r10, 1
 85c:	02 c0       	rjmp	.+4      	; 0x862 <__DATA_REGION_LENGTH__+0x62>
 85e:	8b e2       	ldi	r24, 0x2B	; 43
 860:	01 c0       	rjmp	.+2      	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 862:	80 e2       	ldi	r24, 0x20	; 32
 864:	a7 fc       	sbrc	r10, 7
 866:	8d e2       	ldi	r24, 0x2D	; 45
 868:	b6 01       	movw	r22, r12
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 870:	89 14       	cp	r8, r9
 872:	38 f4       	brcc	.+14     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 874:	b6 01       	movw	r22, r12
 876:	80 e3       	ldi	r24, 0x30	; 48
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 87e:	9a 94       	dec	r9
 880:	f7 cf       	rjmp	.-18     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 882:	8a 94       	dec	r8
 884:	f3 01       	movw	r30, r6
 886:	e8 0d       	add	r30, r8
 888:	f1 1d       	adc	r31, r1
 88a:	80 81       	ld	r24, Z
 88c:	b6 01       	movw	r22, r12
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 894:	81 10       	cpse	r8, r1
 896:	f5 cf       	rjmp	.-22     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
 898:	22 20       	and	r2, r2
 89a:	09 f4       	brne	.+2      	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 89c:	42 ce       	rjmp	.-892    	; 0x522 <vfprintf+0x24>
 89e:	b6 01       	movw	r22, r12
 8a0:	80 e2       	ldi	r24, 0x20	; 32
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	0e 94 76 04 	call	0x8ec	; 0x8ec <fputc>
 8a8:	2a 94       	dec	r2
 8aa:	f6 cf       	rjmp	.-20     	; 0x898 <__DATA_REGION_LENGTH__+0x98>
 8ac:	f6 01       	movw	r30, r12
 8ae:	86 81       	ldd	r24, Z+6	; 0x06
 8b0:	97 81       	ldd	r25, Z+7	; 0x07
 8b2:	02 c0       	rjmp	.+4      	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
 8b4:	8f ef       	ldi	r24, 0xFF	; 255
 8b6:	9f ef       	ldi	r25, 0xFF	; 255
 8b8:	2b 96       	adiw	r28, 0x0b	; 11
 8ba:	e2 e1       	ldi	r30, 0x12	; 18
 8bc:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__epilogue_restores__>

000008c0 <strnlen_P>:
 8c0:	fc 01       	movw	r30, r24
 8c2:	05 90       	lpm	r0, Z+
 8c4:	61 50       	subi	r22, 0x01	; 1
 8c6:	70 40       	sbci	r23, 0x00	; 0
 8c8:	01 10       	cpse	r0, r1
 8ca:	d8 f7       	brcc	.-10     	; 0x8c2 <strnlen_P+0x2>
 8cc:	80 95       	com	r24
 8ce:	90 95       	com	r25
 8d0:	8e 0f       	add	r24, r30
 8d2:	9f 1f       	adc	r25, r31
 8d4:	08 95       	ret

000008d6 <strnlen>:
 8d6:	fc 01       	movw	r30, r24
 8d8:	61 50       	subi	r22, 0x01	; 1
 8da:	70 40       	sbci	r23, 0x00	; 0
 8dc:	01 90       	ld	r0, Z+
 8de:	01 10       	cpse	r0, r1
 8e0:	d8 f7       	brcc	.-10     	; 0x8d8 <strnlen+0x2>
 8e2:	80 95       	com	r24
 8e4:	90 95       	com	r25
 8e6:	8e 0f       	add	r24, r30
 8e8:	9f 1f       	adc	r25, r31
 8ea:	08 95       	ret

000008ec <fputc>:
 8ec:	0f 93       	push	r16
 8ee:	1f 93       	push	r17
 8f0:	cf 93       	push	r28
 8f2:	df 93       	push	r29
 8f4:	fb 01       	movw	r30, r22
 8f6:	23 81       	ldd	r18, Z+3	; 0x03
 8f8:	21 fd       	sbrc	r18, 1
 8fa:	03 c0       	rjmp	.+6      	; 0x902 <__stack+0x3>
 8fc:	8f ef       	ldi	r24, 0xFF	; 255
 8fe:	9f ef       	ldi	r25, 0xFF	; 255
 900:	2c c0       	rjmp	.+88     	; 0x95a <__stack+0x5b>
 902:	22 ff       	sbrs	r18, 2
 904:	16 c0       	rjmp	.+44     	; 0x932 <__stack+0x33>
 906:	46 81       	ldd	r20, Z+6	; 0x06
 908:	57 81       	ldd	r21, Z+7	; 0x07
 90a:	24 81       	ldd	r18, Z+4	; 0x04
 90c:	35 81       	ldd	r19, Z+5	; 0x05
 90e:	42 17       	cp	r20, r18
 910:	53 07       	cpc	r21, r19
 912:	44 f4       	brge	.+16     	; 0x924 <__stack+0x25>
 914:	a0 81       	ld	r26, Z
 916:	b1 81       	ldd	r27, Z+1	; 0x01
 918:	9d 01       	movw	r18, r26
 91a:	2f 5f       	subi	r18, 0xFF	; 255
 91c:	3f 4f       	sbci	r19, 0xFF	; 255
 91e:	31 83       	std	Z+1, r19	; 0x01
 920:	20 83       	st	Z, r18
 922:	8c 93       	st	X, r24
 924:	26 81       	ldd	r18, Z+6	; 0x06
 926:	37 81       	ldd	r19, Z+7	; 0x07
 928:	2f 5f       	subi	r18, 0xFF	; 255
 92a:	3f 4f       	sbci	r19, 0xFF	; 255
 92c:	37 83       	std	Z+7, r19	; 0x07
 92e:	26 83       	std	Z+6, r18	; 0x06
 930:	14 c0       	rjmp	.+40     	; 0x95a <__stack+0x5b>
 932:	8b 01       	movw	r16, r22
 934:	ec 01       	movw	r28, r24
 936:	fb 01       	movw	r30, r22
 938:	00 84       	ldd	r0, Z+8	; 0x08
 93a:	f1 85       	ldd	r31, Z+9	; 0x09
 93c:	e0 2d       	mov	r30, r0
 93e:	09 95       	icall
 940:	89 2b       	or	r24, r25
 942:	e1 f6       	brne	.-72     	; 0x8fc <fputc+0x10>
 944:	d8 01       	movw	r26, r16
 946:	16 96       	adiw	r26, 0x06	; 6
 948:	8d 91       	ld	r24, X+
 94a:	9c 91       	ld	r25, X
 94c:	17 97       	sbiw	r26, 0x07	; 7
 94e:	01 96       	adiw	r24, 0x01	; 1
 950:	17 96       	adiw	r26, 0x07	; 7
 952:	9c 93       	st	X, r25
 954:	8e 93       	st	-X, r24
 956:	16 97       	sbiw	r26, 0x06	; 6
 958:	ce 01       	movw	r24, r28
 95a:	df 91       	pop	r29
 95c:	cf 91       	pop	r28
 95e:	1f 91       	pop	r17
 960:	0f 91       	pop	r16
 962:	08 95       	ret

00000964 <__ultoa_invert>:
 964:	fa 01       	movw	r30, r20
 966:	aa 27       	eor	r26, r26
 968:	28 30       	cpi	r18, 0x08	; 8
 96a:	51 f1       	breq	.+84     	; 0x9c0 <__ultoa_invert+0x5c>
 96c:	20 31       	cpi	r18, 0x10	; 16
 96e:	81 f1       	breq	.+96     	; 0x9d0 <__ultoa_invert+0x6c>
 970:	e8 94       	clt
 972:	6f 93       	push	r22
 974:	6e 7f       	andi	r22, 0xFE	; 254
 976:	6e 5f       	subi	r22, 0xFE	; 254
 978:	7f 4f       	sbci	r23, 0xFF	; 255
 97a:	8f 4f       	sbci	r24, 0xFF	; 255
 97c:	9f 4f       	sbci	r25, 0xFF	; 255
 97e:	af 4f       	sbci	r26, 0xFF	; 255
 980:	b1 e0       	ldi	r27, 0x01	; 1
 982:	3e d0       	rcall	.+124    	; 0xa00 <__ultoa_invert+0x9c>
 984:	b4 e0       	ldi	r27, 0x04	; 4
 986:	3c d0       	rcall	.+120    	; 0xa00 <__ultoa_invert+0x9c>
 988:	67 0f       	add	r22, r23
 98a:	78 1f       	adc	r23, r24
 98c:	89 1f       	adc	r24, r25
 98e:	9a 1f       	adc	r25, r26
 990:	a1 1d       	adc	r26, r1
 992:	68 0f       	add	r22, r24
 994:	79 1f       	adc	r23, r25
 996:	8a 1f       	adc	r24, r26
 998:	91 1d       	adc	r25, r1
 99a:	a1 1d       	adc	r26, r1
 99c:	6a 0f       	add	r22, r26
 99e:	71 1d       	adc	r23, r1
 9a0:	81 1d       	adc	r24, r1
 9a2:	91 1d       	adc	r25, r1
 9a4:	a1 1d       	adc	r26, r1
 9a6:	20 d0       	rcall	.+64     	; 0x9e8 <__ultoa_invert+0x84>
 9a8:	09 f4       	brne	.+2      	; 0x9ac <__ultoa_invert+0x48>
 9aa:	68 94       	set
 9ac:	3f 91       	pop	r19
 9ae:	2a e0       	ldi	r18, 0x0A	; 10
 9b0:	26 9f       	mul	r18, r22
 9b2:	11 24       	eor	r1, r1
 9b4:	30 19       	sub	r19, r0
 9b6:	30 5d       	subi	r19, 0xD0	; 208
 9b8:	31 93       	st	Z+, r19
 9ba:	de f6       	brtc	.-74     	; 0x972 <__ultoa_invert+0xe>
 9bc:	cf 01       	movw	r24, r30
 9be:	08 95       	ret
 9c0:	46 2f       	mov	r20, r22
 9c2:	47 70       	andi	r20, 0x07	; 7
 9c4:	40 5d       	subi	r20, 0xD0	; 208
 9c6:	41 93       	st	Z+, r20
 9c8:	b3 e0       	ldi	r27, 0x03	; 3
 9ca:	0f d0       	rcall	.+30     	; 0x9ea <__ultoa_invert+0x86>
 9cc:	c9 f7       	brne	.-14     	; 0x9c0 <__ultoa_invert+0x5c>
 9ce:	f6 cf       	rjmp	.-20     	; 0x9bc <__ultoa_invert+0x58>
 9d0:	46 2f       	mov	r20, r22
 9d2:	4f 70       	andi	r20, 0x0F	; 15
 9d4:	40 5d       	subi	r20, 0xD0	; 208
 9d6:	4a 33       	cpi	r20, 0x3A	; 58
 9d8:	18 f0       	brcs	.+6      	; 0x9e0 <__ultoa_invert+0x7c>
 9da:	49 5d       	subi	r20, 0xD9	; 217
 9dc:	31 fd       	sbrc	r19, 1
 9de:	40 52       	subi	r20, 0x20	; 32
 9e0:	41 93       	st	Z+, r20
 9e2:	02 d0       	rcall	.+4      	; 0x9e8 <__ultoa_invert+0x84>
 9e4:	a9 f7       	brne	.-22     	; 0x9d0 <__ultoa_invert+0x6c>
 9e6:	ea cf       	rjmp	.-44     	; 0x9bc <__ultoa_invert+0x58>
 9e8:	b4 e0       	ldi	r27, 0x04	; 4
 9ea:	a6 95       	lsr	r26
 9ec:	97 95       	ror	r25
 9ee:	87 95       	ror	r24
 9f0:	77 95       	ror	r23
 9f2:	67 95       	ror	r22
 9f4:	ba 95       	dec	r27
 9f6:	c9 f7       	brne	.-14     	; 0x9ea <__ultoa_invert+0x86>
 9f8:	00 97       	sbiw	r24, 0x00	; 0
 9fa:	61 05       	cpc	r22, r1
 9fc:	71 05       	cpc	r23, r1
 9fe:	08 95       	ret
 a00:	9b 01       	movw	r18, r22
 a02:	ac 01       	movw	r20, r24
 a04:	0a 2e       	mov	r0, r26
 a06:	06 94       	lsr	r0
 a08:	57 95       	ror	r21
 a0a:	47 95       	ror	r20
 a0c:	37 95       	ror	r19
 a0e:	27 95       	ror	r18
 a10:	ba 95       	dec	r27
 a12:	c9 f7       	brne	.-14     	; 0xa06 <__ultoa_invert+0xa2>
 a14:	62 0f       	add	r22, r18
 a16:	73 1f       	adc	r23, r19
 a18:	84 1f       	adc	r24, r20
 a1a:	95 1f       	adc	r25, r21
 a1c:	a0 1d       	adc	r26, r0
 a1e:	08 95       	ret

00000a20 <__prologue_saves__>:
 a20:	2f 92       	push	r2
 a22:	3f 92       	push	r3
 a24:	4f 92       	push	r4
 a26:	5f 92       	push	r5
 a28:	6f 92       	push	r6
 a2a:	7f 92       	push	r7
 a2c:	8f 92       	push	r8
 a2e:	9f 92       	push	r9
 a30:	af 92       	push	r10
 a32:	bf 92       	push	r11
 a34:	cf 92       	push	r12
 a36:	df 92       	push	r13
 a38:	ef 92       	push	r14
 a3a:	ff 92       	push	r15
 a3c:	0f 93       	push	r16
 a3e:	1f 93       	push	r17
 a40:	cf 93       	push	r28
 a42:	df 93       	push	r29
 a44:	cd b7       	in	r28, 0x3d	; 61
 a46:	de b7       	in	r29, 0x3e	; 62
 a48:	ca 1b       	sub	r28, r26
 a4a:	db 0b       	sbc	r29, r27
 a4c:	0f b6       	in	r0, 0x3f	; 63
 a4e:	f8 94       	cli
 a50:	de bf       	out	0x3e, r29	; 62
 a52:	0f be       	out	0x3f, r0	; 63
 a54:	cd bf       	out	0x3d, r28	; 61
 a56:	09 94       	ijmp

00000a58 <__epilogue_restores__>:
 a58:	2a 88       	ldd	r2, Y+18	; 0x12
 a5a:	39 88       	ldd	r3, Y+17	; 0x11
 a5c:	48 88       	ldd	r4, Y+16	; 0x10
 a5e:	5f 84       	ldd	r5, Y+15	; 0x0f
 a60:	6e 84       	ldd	r6, Y+14	; 0x0e
 a62:	7d 84       	ldd	r7, Y+13	; 0x0d
 a64:	8c 84       	ldd	r8, Y+12	; 0x0c
 a66:	9b 84       	ldd	r9, Y+11	; 0x0b
 a68:	aa 84       	ldd	r10, Y+10	; 0x0a
 a6a:	b9 84       	ldd	r11, Y+9	; 0x09
 a6c:	c8 84       	ldd	r12, Y+8	; 0x08
 a6e:	df 80       	ldd	r13, Y+7	; 0x07
 a70:	ee 80       	ldd	r14, Y+6	; 0x06
 a72:	fd 80       	ldd	r15, Y+5	; 0x05
 a74:	0c 81       	ldd	r16, Y+4	; 0x04
 a76:	1b 81       	ldd	r17, Y+3	; 0x03
 a78:	aa 81       	ldd	r26, Y+2	; 0x02
 a7a:	b9 81       	ldd	r27, Y+1	; 0x01
 a7c:	ce 0f       	add	r28, r30
 a7e:	d1 1d       	adc	r29, r1
 a80:	0f b6       	in	r0, 0x3f	; 63
 a82:	f8 94       	cli
 a84:	de bf       	out	0x3e, r29	; 62
 a86:	0f be       	out	0x3f, r0	; 63
 a88:	cd bf       	out	0x3d, r28	; 61
 a8a:	ed 01       	movw	r28, r26
 a8c:	08 95       	ret

00000a8e <_exit>:
 a8e:	f8 94       	cli

00000a90 <__stop_program>:
 a90:	ff cf       	rjmp	.-2      	; 0xa90 <__stop_program>
